{"version":3,"sources":["Components/NavBar.js","Components/ErrorSection.js","data/Suite.js","data/Version.js","data/ProductCategory.js","data/ProductCode.js","Store/api.js","Service/ProductService.js","Components/productList.js","Store/Product/service.js","Store/Product/suite.js","Components/Model.js","Store/Product/version.js","Store/Product/originalVersion.js","Components/Checkbox.js","Components/BitCheckBoxes.js","Components/dnd/ItemTypes.js","Components/dnd/Card.js","Components/dnd/Container.js","Components/dnd/ListDragAndDrop.js","Components/VersionDetail.js","Components/productEdit.js","Components/ProductEditContainer.js","Store/Feature/service.js","data/Feature.js","data/FeatureGroup.js","data/FeatureType.js","data/FeatureItem.js","Service/FeatureService.js","Store/Feature/feature.js","data/ClinicalCategory.js","data/ClinicalItem.js","data/ClinicalProductCategory.js","Service/ClinicalCategory.js","data/Item.js","Service/ItemService.js","Components/FeatureItemDetail.js","Components/featureEdit.js","data/WorkFlowItem.js","Service/WorkFlowService.js","Components/WorkFlowDetail.js","Components/ProductCategoryDetail.js","Components/ProductCategoryList.js","Components/ProductCodeDetail.js","Components/ProductCodeList.js","Components/featureList.js","Components/featureEditContainer.js","Components/FeatureGroupDetail.js","Components/FeatureGroupList.js","Components/FeatureTypeDetail.js","Components/FeatureTypeList.js","Components/ClinicalCategoryList.js","Store/ClinicalCategory/service.js","Store/ClinicalCategory/clinicalCategory.js","Components/ClinicalCategoryVersions.js","Components/ClinicalItemDetail.js","Components/ClinicalProductCategoryDetail.js","Components/ClinicalFeatureDetail.js","Components/ClinicalCategoryEdit.js","Components/ClinicalCategoryData.js","Store/Item/service.js","Store/Item/item.js","Store/Item/originalItem.js","Components/ItemDetail.js","Components/ItemList.js","Components/WorkFlowItemList.js","App.js","serviceWorker.js","Store/Product/originalSuite.js","Store/Product/originalCode.js","Store/Product/originalCategory.js","Store/Feature/originalFeature.js","Store/ClinicalCategory/originalClinicalCategory.js","Store/entities.js","Store/error.js","Store/isLoading.js","Store/reducer.js","Store/MiddleWare/Product/productService.js","Store/Product/code.js","Store/Product/category.js","Store/MiddleWare/Product/product.js","Store/MiddleWare/Feature/featureService.js","Store/MiddleWare/Feature/feature.js","Store/MiddleWare/Item/itemService.js","Store/MiddleWare/Item/item.js","Store/MiddleWare/ClinicalCategory/clinicalCategoryService.js","Store/MiddleWare/ClinicalCategory/clinicalCategory.js","index.js","Store/configureStore.js"],"names":["NavStyle","styled","div","NavBar","Fragment","className","to","ErrorStyle","Error","children","ErrorSection","errorString","useSelector","state","api","instance","axios","create","baseURL","process","id","data","apiCallSuccess","createAction","ProductService","dispatch","onSuccess","onError","getSuites","a","suite","response","request","getSuiteWithVersions","length","apiAction","type","payload","status","getVersionWithDependents","version","toString","getProductVersion","getNewSuite","Id","UniqueId","uuidv4","ApprovalStatus","Versions","getNewVersion","suiteId","StartDate","EndDate","IsApproved","IsDeleted","ProductLines","SuiteId","getNewProductLine","versionId","productCodeId","VersionId","ProductCodeId","SaveSuiteWithDependents","s","SaveVersion","v","SaveVersionWithDependents","getProductCategories","category","getProductCodes","code","getProductCodeWithDependents","SaveCategory","SaveCode","SaveCodeWithDependent","getNewCategory","uuid","Name","getNewCode","Code","this","ProductListStyle","columns","key","name","frozen","width","ProductList","useState","products","setProducts","productSrv","useEffect","loadSuites","suites","console","log","rowGetter","i","rowsCount","minHeight","getCellActions","column","row","icon","icons","arrowE","serviceGetSuite","serviceSaveSuite","serviceGetVersion","serviceSaveVersion","serviceGetCode","serviceSaveCode","serviceGetCategory","serviceSaveCategory","suiteReceived","suiteSaved","suiteError","suiteSlice","createSlice","initialState","reducers","updateSuite","action","actions","updateVersion","SaveSuite","Wrapper","Backdrop","Box","Modal","forwardRef","props","ref","React","display","setDisplay","useImperativeHandle","openModal","open","close","ReactDOM","createPortal","onClick","document","getElementById","versionReceived","versionSaved","versionSlice","originalVersionSlice","updateOriginalVersion","Component","Container","BitCheckBoxes","items","value","onChange","bitValue","setBitValue","Object","keys","filter","map","item","label","checked","e","prop","b","toggleCheckbox","target","ItemTypes","Card","text","isAvailable","handleOnClick","useContext","CardContext","useDrag","collect","monitor","isDragging","drag","style","opacity","handleDrop","useDrop","accept","canDrop","drop","isOver","height","background","ContainerStyle","ListStyle","createContext","ListDragAndDrop","options","selected","selectedList","setSelectedList","optionSearch","setOptionSearch","selectedSearch","setSelectedSearch","DndProvider","backend","HTML5Backend","Provider","handleDeSelect","findIndex","x","push","handleSelect","toUpperCase","includes","option","find","VersionDetail","mode","onSave","setVersion","productLines","setProductLines","productCodes","setProductCodes","setOptions","useDispatch","loadCodes","getOptions","_","cloneDeep","is","setField","setBit","setOption","ripple","onPress","format","date","Date","parse","forceRenderTabPanel","show","None","ContactCentre","Online","Aggregators","SalesChannels","NSW","QLD","SA","TAS","VIC","WA","ACT","NT","StateCoverge","Single","Couple","Family","SingleParentFamily","Scale","SingleToSingle","CoupleToCouple","CoupleToFamily","FamilyToCouple","FamilyToFamily","SingleParentFamilyToCouple","SingleParentFamilyToFamily","SingleParentFamilyToSingleParentFamily","ScaleQuoteMap","Description","MinAge","IsActive","StaffSubsidy","selectedValues","cItems","cItemIds","deletedItems","difference","SuiteStyle","SuiteDetailStyle","VersionsStyle","VersionListStyle","InputBlockStyle","Suite","SuiteDetail","VersionList","InputBlock","ProductEdit","originalSelected","setSuite","categories","setCategories","modalRefNewVersion","useRef","modalRefCloneVersion","loadCategories","isEmpty","cs","index","onVersionChange","isEqual","CategoryId","getOptionLabel","getOptionValue","Mode","current","ListGroup","as","Item","selectVersion","active","splice","removeVersion","ProductEditContainer","entities","originalSuite","isDirtySuite","setIsDirtySuite","location","useLocation","history","useHistory","useParams","LoadSuite","pathname","indexOf","newLocation","replace","handleIsDirtySuite","isDirtTemplate","Save","serviceGetFeature","serviceSaveFeature","FeatureService","getFeatures","feature","getFeatureWithDependents","getFeatureListWithDependents","getFeature","getFeatureWithItem","getGroups","featureGroup","getTypes","featureType","getNewFeature","GroupId","TypeId","Items","getNewFeatureItem","featureId","itemId","FeatureId","ItemId","getNewGroup","getNewType","SaveFeature","cc","SaveFeatures","SaveFeatureWithItems","f","SaveItems","group","featureItem","DeleteFeature","SaveGroup","DeleteGroup","SaveType","DeleteType","featureSrv","featureReceived","featureSaved","featureSlice","updateFeature","saveFeature","ClinicalCategoryService","getClinicalCategories","cC","getClinicalCategotyWithItems","getClinicalCategotyWithDependents","getNewClinicalCategory","ClinicalItems","ClinicalProductCategories","getNewClinicalItem","getNewClinicalproductCategory","SaveClinicalCategory","DeleteClinicalCategory","SaveClinicalCategoryWithClinicalItems","SaveClinicalCategoryWithDependents","SaveClinicalItem","cI","SaveClinicalProductCategory","cPC","SaveProductCategories","ItemService","getItems","getItem","getNewItem","SaveItem","FeatureItemDetail","itemSrv","setFeatureId","originalFeatureItems","setOriginalFeatureItems","featureItems","setFeatureItems","setItems","isDirtyFeatureItems","setIsDirtyFeatureItems","loadItems","handleIsDirtyFeatureItem","FeatureEdit","clinicalCategorySrv","setFeature","groups","setGroups","types","setTypes","clincalCategories","setClincalCategories","loadClinicalCategories","loadGroups","loadTypes","cCs","setFeid","ClinicalCategoryId","wFItem","WorkFlow","WorkFlowAction","WorkFlowDetail","workFlowItem","setWorkFlowItem","originalWorkFlowItem","setOriginalWorkFlowItem","isDirtyWorkFlowItem","setIsDirtworkFlowItem","isDirtyObject","setIsDirtyObject","isApproved","setIsApproved","Components","versionDetail","LoadWorkFlowItem","handleIsDirtyWFI","isDirtworkFlowItem","isDirtObject","Obj","workFlowSrv","wFI","Type","onObjSave","updateStatus","Amend","ComponentForObject","ProductCategoryDetail","selectedCategory","setCategory","updateName","ProductCategoryList","setSelectedCategory","load","modalRefCloneCategory","closeModalCloneCategory","modalRefNewCategory","closeModalNewCategory","onCategorySave","Action","callback","ProductCodeDetail","selectedCode","setCode","ancillaries","setAncillaries","loadCode","c","Ancillaries","codes","ProductCodeList","setCodes","setSelectedCode","modalRefCloneCode","closeModalCloneCode","modalRefNewCode","closeModalNewCode","onCodeSave","ClinicalCategotyList","features","setFeatures","removeSelectedFeature","cross","FeatureEditContainer","originalFeature","isDirtyFeature","setIsDirtyFeature","handleIsDirtyFeature","FeatureGroupDetail","setGroup","FeatureGroupList","selectedGroup","setSelectedGroup","removeSelectedGroup","FeatureTypeDetail","selectedType","setType","FeatureTypeList","setSelectedType","removeSelectedType","clinicalCategories","setClinicalCategories","ccs","removeSelectedClinicalCategory","serviceGetClinicalCategory","serviceSaveClinicalCategory","CCSrv","clinicalCategoryReceived","clinicalCategorySaved","clinicalCategorySlice","updateClinicalCategory","updateClinicalItems","updateFeatures","Features","ClinicalCategoryVersions","selectedId","selectedItems","detailComponent","versions","setVersions","newVersion","setNewVersion","modalRefNewClinicalItem","getClinicalItemsByGroup","newUniqueId","substring","lastIndexOf","values","cls","forEach","element","groupBy","cl","onVersionSave","cIs","groupKey","vs","omit","assign","newItems","concat","apply","obj","arr","k","reduce","acc","toLocaleDateString","cloneElement","allAllocatedItems","sUniqueId","split","ClinicalItemDetail","clinicalCategoryId","setClinicalCategoryId","startDate","setStartDate","endDate","setEndDate","clinicalItems","setClinicalItems","currentAllocatedItemIds","allAllocatedItemIdsExceptCurrent","moment","updateStartDate","disabled","updateEndDate","ClinicalProductCategoryDetail","ProductCategoryId","ClinicalFeatureDetail","clinicalCategory","clinicalFeatures","ClinicalCategory","ClinicalCategoryEdit","originalClinicalCategory","isDirty","setIsDirty","isClinicalItemDirty","setIsClinicalItemDirty","isProductCategoryDirty","setIsProductCategoryDirty","isFeaturesDirty","setIsFeaturesDirty","handleIsDirty","occ","pcs","sortBy","opcs","cis","ocis","cfs","ocfs","isDirtyItems","isDirtFeatrues","isDirtProductCategories","updateCCCode","updateCCName","ProductEditData","LoadClinicalItem","serviceGetItem","serviceSaveItem","itemReceived","itemSaved","itemSlice","updateItem","originalItemSlice","updateOriginalItem","ItemDetail","selectedItem","setItem","originalItem","isDirtyItem","setIsDirtyItem","handleIsDirtyItem","updateCode","updateType","SpecialityCode","UpdateSpecialityCode","ProviderNumber","updateProviderNumber","ItemList","onItemSave","modalRefCloneItem","modalRefNewItem","WorkFlowItemList","workFlowItems","setWorkFlowItems","wFItems","App","path","exact","component","productCategoryList","productCodeList","FeatureList","featureGroupList","featureTypeList","ClinicalCategoryList","ClinicalCategoryData","Boolean","window","hostname","match","originalSuiteSlice","updateOriginalSuite","originalCodeSlice","updateOriginalCode","originalCategorySlice","updateOriginalCategory","originalFeatureSlice","updateOriginalFeature","cCSrv","originalClinicalCategorySlice","updateOriginalClinicalCategory","combineReducers","suiteReducer","originalSuiteReducer","versionReducer","originalVersion","originalVersionReducer","originalCode","originalCodeReducer","originalCategory","originalCategoryReducer","FeatureReducer","originalFeatureReducer","ItemReducer","originalItemReducer","ClinicalCategoryReducer","originalClinicalCategoryReducer","errorStringSlice","setErrorString","isLoadingSlice","setIsLoading","loading","entitiesReducer","errorStringReducer","isLoading","isLoadingReducer","productService","next","codeReceived","codeSaved","codeSlice","categoryReceived","categorySaved","categorySlice","updateCategory","product","store","suiteActions","versionActions","codeActions","categoryActions","error","featureService","itemService","clinicalCategoryService","configureStore","reducer","middleware","getDefaultMiddleware","cinicalCategoryService","cinicalCategory","subscribe","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f8c96853.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\n\r\nexport const NavStyle = styled.div`\r\n    display: flex;\r\n    justify-content: space-round;\r\n    align-items: center;\r\n    min-height: 10vh;\r\n    background: rgb(73,79,82);\r\n    color: white;\r\n\r\n    .links {\r\n        width: 40%;\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-items: center;\r\n        list-style: none;\r\n    }\r\n\r\n    .link {\r\n        color: white;\r\n    }\r\n`\r\n\r\nconst NavBar = () => {\r\n //const errorString = useSelector(state =>state.errorString);\r\n\r\n  return (\r\n    <React.Fragment> \r\n        <NavStyle>\r\n            <h3>PDS</h3>\r\n            <ul className=\"links\">\r\n                <Link className=\"link\" to=\"/productlist\">\r\n                    <li>Product</li>\r\n                </Link>\r\n                <Link className=\"link\" to=\"/featurelist\">\r\n                    <li>Feature</li>\r\n                </Link>\r\n                <Link className=\"link\" to=\"/clinicalCategorylist\">\r\n                    <li>ClinicalCategory</li>\r\n                </Link>\r\n                <Link className=\"link\" to=\"/Itemlist\">\r\n                    <li>Item</li>\r\n                </Link>\r\n                <Link className=\"link\" to=\"/WorkFlowItemList\">\r\n                    <li>WorkFlow</li>\r\n                </Link>\r\n            </ul>\r\n        </NavStyle>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from 'styled-components';\r\n\r\nexport const ErrorStyle = styled.div`\r\n    background: red;\r\n    Display: flex;\r\n`\r\n\r\nconst Error = ({children}) => {\r\n    return (<ErrorStyle>{children}</ErrorStyle> );\r\n}\r\n\r\nconst ErrorSection = () => {\r\n    const errorString = useSelector(state =>state.errorString);\r\n\r\n  return (\r\n    <React.Fragment> \r\n            <Error>{errorString}</Error>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ErrorSection;","import axios from 'axios'\r\n\r\nlet api = '/api/ProductSuite/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    getVersionsData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'GetVersions/' + id\r\n    }),\r\n    getVersionsAndProductLinesData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'GetVersionsAndProductLines/' + id\r\n    }),\r\n    postDataWithDependents: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + 'Dependents/',\r\n        'data':data\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/ProductVersion/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    getDataWithDependents: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'Dependents/' + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    postDataWithDependents: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + 'Dependents',\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/ProductCategory/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/ProductCode/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    getDataWithDependents: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'Dependents/' + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    postDataWithDependent: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + \"Dependents\",\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const apiCallBegan = createAction(\"api/CallBegan\");\r\nexport const apiCallSuccess = createAction(\"api/CallSuccess\");\r\nexport const apiCallFailed = createAction(\"api/CallFailed\");\r\n","import  suite from '../data/Suite.js';\r\nimport  version from '../data/Version.js';\r\nimport category from '../data/ProductCategory.js';\r\nimport code from '../data/ProductCode';\r\nimport uuid from 'react-uuid';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport * as apiAction from '../Store/api'\r\n\r\nexport class ProductService {\r\n  constructor(dispatch, onSuccess, onError) {\r\n    this.dispatch = dispatch;\r\n    this.onSuccess = onSuccess;\r\n    this.onError = onError;\r\n  }\r\n\r\n    getSuites = async () => {\r\n      try {\r\n        let response = await suite.getDataList();\r\n      \r\n        return response.data;\r\n      } catch (err) {\r\n        if (err.response) {\r\n          // setError(\"Failure \"+ err.response.status);\r\n        } else if (err.request) {\r\n          // setError(\"client never received a response, or request never left\");\r\n        } else {\r\n          // anything else\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    getSuiteWithVersions = async (id) => {\r\n      try {\r\n        let response = await suite.getVersionsAndProductLinesData(id);\r\n        if (response.data?.length > 0) {\r\n          if (this.dispatch)\r\n          this.dispatch(apiAction.apiCallSuccess(response.data[0]));\r\n          if (this.onSuccess)\r\n          this.dispatch({ type: this.onSuccess, payload: response.data[0] });\r\n        }\r\n        //return response.data[0];\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: \"Failure \"+ err.response.status});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: \"client never received a response, or request never left\"});\r\n         } else {\r\n           // anything else\r\n         }\r\n        }\r\n    };\r\n\r\n    getVersionWithDependents = async (id) => {\r\n      try {\r\n        let response = await version.getDataWithDependents(id);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data[0]));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data[0] });\r\n        return response.data[0];\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: \"Network Error\" + err.toString()});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    getProductVersion = () => {\r\n      return {};\r\n    };\r\n\r\n    getNewSuite = () => {\r\n      return {\r\n        Id: 0,\r\n        UniqueId: uuidv4().toString(),\r\n        ApprovalStatus: \"\",\r\n        Versions: []\r\n      };\r\n    };\r\n\r\n    getNewVersion = (suiteId) => {\r\n      return {\r\n        Id: 0,\r\n        UniqueId: uuidv4().toString(),\r\n        ApprovalStatus: \"\",\r\n        StartDate: \"\",\r\n        EndDate: \"\",\r\n        IsApproved: false,\r\n        IsDeleted: false,\r\n        ProductLines: [],\r\n        SuiteId: suiteId,\r\n      };\r\n    };\r\n\r\n    getNewProductLine = (versionId, productCodeId) => {\r\n      return {\r\n        Id: 0,\r\n        UniqueId: uuidv4().toString(),\r\n        ApprovalStatus: \"\",\r\n        VersionId: versionId,\r\n        ProductCodeId: productCodeId\r\n      };\r\n    };\r\n\r\n    SaveSuiteWithDependents = async (s) => {\r\n      try {\r\n        let response = await suite.postDataWithDependents(s);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    SaveVersion = async (v) => {\r\n      try {\r\n        let response = await version.postData(v);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    SaveVersionWithDependents = async (v) => {\r\n      try {\r\n        let response = await version.postDataWithDependents(v);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    getProductCategories = async () => {\r\n      try {\r\n        let response = await category.getDataList();\r\n        return response.data;\r\n      } catch (err) {\r\n        if (err.response) {\r\n          // setError(\"Failure \"+ err.response.status);\r\n        } else if (err.request) {\r\n          // setError(\"client never received a response, or request never left\");\r\n        } else {\r\n          // anything else\r\n        }\r\n      }\r\n    };\r\n\r\n    getProductCodes = async () => {\r\n      try {\r\n        let response = await code.getDataList();\r\n        return response.data;\r\n      } catch (err) {\r\n        if (err.response) {\r\n          // setError(\"Failure \"+ err.response.status);\r\n        } else if (err.request) {\r\n          // setError(\"client never received a response, or request never left\");\r\n        } else {\r\n          // anything else\r\n        }\r\n      }\r\n    };\r\n\r\n    getProductCodeWithDependents = async (id) => {\r\n      try {\r\n        let response = await code.getDataWithDependents(id);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    SaveCategory = async (v) => {\r\n      try {\r\n        let response = await category.postData(v);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    SaveCode = async (v) => {\r\n      try {\r\n        let response = await code.postData(v);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    SaveCodeWithDependent = async (v) => {\r\n      try {\r\n        let response = await code.postDataWithDependent(v);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    };\r\n\r\n    getNewCategory = () => {\r\n      return {\r\n        Id: 0,\r\n        UniqueId: uuid(),\r\n        Name: \"\"\r\n      };\r\n    };\r\n\r\n    getNewCode = () => {\r\n      return {\r\n        Id: 0,\r\n        UniqueId: uuid(),\r\n        Code: \"\"\r\n      };\r\n    };\r\n  \r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\nimport { ProductService } from \"../Service/ProductService\";\r\nimport icons from 'glyphicons'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const ProductListStyle = styled.div`\r\n\r\n`\r\n\r\nconst COLUMN_WIDTH = 440;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Name\",\r\n    name: \"Name\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  }\r\n];\r\n\r\nconst ProductList = () => {\r\n  // const errorString = useSelector(state =>state.errorString);\r\n  const [products, setProducts] = useState([]);\r\n  \r\n  const productSrv = new ProductService();\r\n\r\n  useEffect( () => {\r\n   loadSuites()\r\n  }, []);\r\n\r\nconst loadSuites = async() => {\r\n let suites = await productSrv.getSuites()\r\n console.log(suites);\r\nsetProducts(suites);\r\n}\r\n\r\n// const nameActions = [\r\n//   {\r\n//     icon: <span><button>{icons.arrowE}</button></span>,\r\n//     callback: () => {\r\n//       alert(\"Deleting\");\r\n//     }\r\n//   }\r\n// ];\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Name:  [\r\n      {\r\n        icon: <span> <Link className=\"link\" to={\"/productEdit/\" + row.Id}><button>{icons.arrowE}</button></Link></span>//,\r\n        // callback: () => {\r\n        //   let id = row.Id;\r\n        //   return(<Redirect to=\"/productEdit/\"{id} />);\r\n        // }\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n\r\n\r\n   \r\n  return (\r\n    <React.Fragment> \r\n        <ProductListStyle>\r\n            <h1>Product List</h1> \r\n            <Link className=\"link\" to=\"/productEdit/new\">\r\n                    <h3>New</h3>\r\n                </Link>\r\n            <Link className=\"link\" to=\"/productCategorylist\">\r\n                    <h3>Category</h3>\r\n                </Link>\r\n                <Link className=\"link\" to=\"/productCodelist\">\r\n                    <h2>Code</h2>\r\n                </Link>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => products[i]}\r\n                rowsCount={products.length}\r\n                minHeight={500}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ProductListStyle>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const serviceGetSuite = createAction(\"service/GetSuite\");\r\nexport const serviceSaveSuite = createAction(\"service/SaveSuite\");\r\nexport const serviceSaveSuiteVersion = createAction(\"service/SaveSuiteVersion\");\r\nexport const serviceGetVersion = createAction(\"service/GetVersion\");\r\nexport const serviceSaveVersion = createAction(\"service/SaveVersion\");\r\nexport const serviceGetCode = createAction(\"service/GetCode\");\r\nexport const serviceSaveCode = createAction(\"service/SaveCode\");\r\nexport const serviceGetCategory = createAction(\"service/GetCategory\");\r\nexport const serviceSaveCategory = createAction(\"service/SaveCategory\");","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { serviceGetSuite, serviceSaveSuite, serviceSaveSuiteVersion } from './service';\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nexport const suiteReceived = createAction(\"suite/suiteReceived\");\r\nexport const suiteSaved = createAction(\"suite/suiteSaved\");\r\nexport const suiteError = createAction(\"suite/suiteError\");\r\nexport const suiteVersionSaved = createAction(\"suite/suiteVersionSaved\");\r\n\r\nconst  suiteSlice = createSlice({\r\n    name: 'suite',\r\n    initialState: productSrv.getNewSuite(),\r\n    reducers: {\r\n      updateSuite(suite, action){\r\n        return action.payload;\r\n      },\r\n      // updateVersion(suite, action){\r\n      //   if (action.payload.Id) {\r\n      //     let index = suite.Versions.findIndex(x => x.Id === action.payload.Id);\r\n      //     if (index > 0) {\r\n      //       suite.Versions[index] = action.payload\r\n      //     }else{\r\n      //      suite.Versions.push(action.payload)\r\n      //     }\r\n      //   }\r\n      // },  \r\n      // updateName(template, action){\r\n      //   template.Name = action.payload\r\n      // }, \r\n      // updateVersion(suite, action){\r\n      //   suite.Layout.Version = action.payload\r\n      // }, \r\n      // updateLayout(template, action){\r\n      //   template.Layout = action.payload\r\n      // },  \r\n      // addItem(template, action) {\r\n      //   template.Layout.Setting.CellData\r\n      //   .push({ ...action.payload, Id : id++})\r\n      // },\r\n      // updateItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //       .findIndex(c => c.Id === action.payload.Id);\r\n      //   template.Layout.Setting.CellData[index] = action.payload;\r\n      // },\r\n      // updateItems(template, action) {\r\n      //   template.Layout.Setting.CellData = action.payload;\r\n      // },\r\n      // removeItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //   .findIndex(c => c.Id === action.payload);\r\n      //    template.Layout.Setting.CellData.splice(index,1)\r\n      // },\r\n    },\r\n  })\r\n  \r\n  export const {\r\n     updateSuite, updateVersion } = suiteSlice.actions\r\n  export default suiteSlice.reducer\r\n\r\n // Action Creators\r\n\r\n  export const loadSuite = (id) => serviceGetSuite({\r\n    data: id,\r\n    onSuccess: suiteReceived.type,\r\n    onError: suiteError.type\r\n  });\r\n\r\n  export const SaveSuite = (suite) => serviceSaveSuite({\r\n    data: suite,\r\n    onSuccess: suiteSaved.type\r\n  });\r\n\r\n  export const SaveSuiteVersion = (version) => serviceSaveSuiteVersion({\r\n    data: version,\r\n    onSuccess: suiteVersionSaved.type\r\n  });\r\n\r\n\r\n\r\n  //createselector from reselect for cachng","import React, {forwardRef, useImperativeHandle} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n`\r\n\r\nexport const Backdrop = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: 100;\r\n    background-color: rgba(0,0,0,0.3);\r\n`\r\n\r\nexport const Box = styled.div`\r\n    position: relative;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    min-height: 30%;\r\n    width: 80%;\r\n    overflow-y: auto;\r\n    background-color: white;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.25);\r\n    z-index: 101;\r\n    padding: 40px;\r\n`\r\n//reference : https://www.youtube.com/watch?v=SmMZqh1xdB4\r\nconst Modal = forwardRef((props,ref) => {\r\n  const [display, setDisplay] = React.useState(false);\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      openModal: () => open(),\r\n      close: () => close()\r\n    }\r\n  });\r\n\r\n  const open = () => {\r\n    setDisplay(true)\r\n  };\r\n\r\n  const close = () => {\r\n    setDisplay(false);\r\n  };\r\n\r\n  if (display) {\r\n    return ReactDOM.createPortal(\r\n      <Wrapper>\r\n        <Backdrop onClick={close} />\r\n        <Box>\r\n          {props.children}\r\n        </Box>\r\n      </Wrapper>, document.getElementById(\"modal-root\"))\r\n  }\r\n\r\n  return null;\r\n\r\n});\r\n\r\nexport default Modal","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { serviceGetVersion, serviceSaveVersion } from './service';\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nexport const versionReceived = createAction(\"version/Received\");\r\nexport const versionSaved = createAction(\"version/Saved\");\r\n\r\nconst  versionSlice = createSlice({\r\n    name: 'version',\r\n    initialState: productSrv.getNewVersion(),\r\n    reducers: {\r\n      updateVersion(version, action){\r\n        return action.payload;\r\n      },\r\n      // updateImage(template, action){\r\n      //   template.Base64 = action.payload\r\n      // },  \r\n      // updateName(template, action){\r\n      //   template.Name = action.payload\r\n      // }, \r\n      // updateVersion(suite, action){\r\n      //   suite.Layout.Version = action.payload\r\n      // }, \r\n      // updateLayout(template, action){\r\n      //   template.Layout = action.payload\r\n      // },  \r\n      // addItem(template, action) {\r\n      //   template.Layout.Setting.CellData\r\n      //   .push({ ...action.payload, Id : id++})\r\n      // },\r\n      // updateItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //       .findIndex(c => c.Id === action.payload.Id);\r\n      //   template.Layout.Setting.CellData[index] = action.payload;\r\n      // },\r\n      // updateItems(template, action) {\r\n      //   template.Layout.Setting.CellData = action.payload;\r\n      // },\r\n      // removeItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //   .findIndex(c => c.Id === action.payload);\r\n      //    template.Layout.Setting.CellData.splice(index,1)\r\n      // },\r\n    },\r\n  })\r\n  \r\n  export const {\r\n     updateVersion } = versionSlice.actions\r\n  export default versionSlice.reducer\r\n\r\n // Action Creators\r\n\r\n  export const loadVersion = (id) => serviceGetVersion({\r\n    data: id,\r\n    onSuccess: versionReceived.type\r\n  });\r\n\r\n  export const SaveVersion = (suite) => serviceSaveVersion({\r\n    data: suite,\r\n    onSuccess: versionSaved.type\r\n  });\r\n\r\n\r\n\r\n  //createselector from reselect for cachng","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nconst   originalVersionSlice = createSlice({\r\n    name: 'originalVersion',\r\n    initialState: productSrv.getNewVersion(),\r\n    reducers: {\r\n      updateOriginalVersion(errorString, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { updateOriginalVersion } = originalVersionSlice.actions\r\n  export default originalVersionSlice.reducer","import React, { Component, PropTypes } from 'react';\r\n\r\nclass Checkbox extends Component {\r\n  state = {\r\n    isChecked: false,\r\n  }\r\n\r\n  toggleCheckboxChange = () => {\r\n    const { handleCheckboxChange, label } = this.props;\r\n\r\n    this.setState(({ isChecked }) => (\r\n      {\r\n        isChecked: !isChecked,\r\n      }\r\n    ));\r\n\r\n    handleCheckboxChange(label);\r\n  }\r\n\r\n  render() {\r\n    const { label } = this.props;\r\n    const { isChecked } = this.state;\r\n\r\n    return (\r\n      <div className=\"checkbox\">\r\n        <label>\r\n          <input\r\n                            type=\"checkbox\"\r\n                            value={label}\r\n                            checked={isChecked}\r\n                            onChange={this.toggleCheckboxChange}\r\n                        />\r\n\r\n          {label}\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Checkbox.propTypes = {\r\n//   label: PropTypes.string.isRequired,\r\n//   handleCheckboxChange: PropTypes.func.isRequired,\r\n// };\r\n\r\nexport default Checkbox;","import React, { useState, useEffect } from 'react';\r\nimport Checkbox from './Checkbox';\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .checkboxs {\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst BitCheckBoxes = ({name, items, value, onChange}) => {\r\n  const [bitValue, setBitValue] = useState(false);\r\n\r\n  useEffect(() => {\r\n      console.log(value);\r\n      setBitValue(value);\r\n  }, [value]);\r\n\r\n     const toggleCheckbox = (prop, checked) => {\r\n      console.log(checked);\r\n      if (checked){\r\n        let b = bitValue | items[prop]\r\n        console.log(b);\r\n        setBitValue(b);\r\n        onChange({name, value: b}); \r\n      }else{\r\n        let b = bitValue ^ items[prop]\r\n        console.log(b);\r\n        setBitValue(b);\r\n        onChange({name, value: b}); \r\n      }\r\n      \r\n    }\r\n     \r\n  \r\n    const createCheckbox = (label) => (\r\n          <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={bitValue  & items[label]}\r\n                    onChange={e => toggleCheckbox(label, e.target.checked)}\r\n                />\r\n                        {label}\r\n          </label>\r\n    )\r\n    const createCheckboxes = () => (\r\n      Object.keys(items).filter((i) => {return i !== \"None\" }).map((item) => {return createCheckbox(item)})\r\n    )\r\n  \r\n    return (\r\n        <React.Fragment> \r\n            <Container> \r\n                <div className = \"checkboxs\">\r\n                    {createCheckboxes()}\r\n                </div>\r\n            </Container>\r\n        </React.Fragment> \r\n    );\r\n  };\r\n  \r\n  export default BitCheckBoxes;","export const ItemTypes = {\r\n    Card: 'card',\r\n  }","import React, { useContext } from 'react';\r\nimport { useDrag } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { CardContext } from './ListDragAndDrop';\r\n\r\nconst Card = ({text, isAvailable, id, onClick}) => {\r\n    const { handleOnClick } = useContext(CardContext);\r\n    const [{ isDragging }, drag] = useDrag({\r\n        item: { \r\n            type: ItemTypes.Card,\r\n            id: id,\r\n            isAvailable: isAvailable\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: !!monitor.isDragging(),\r\n        }),\r\n    });\r\n\r\n    return (<>\r\n\t\t\t<div ref={drag} style={{\r\n        opacity: isDragging ? 0.5 : 1,}} onClick={() => handleOnClick(id)}>{text}\r\n\t\t\t</div>\r\n\t\t</>);\r\n};\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { useDrop } from 'react-dnd';\r\nimport { ItemTypes } from './ItemTypes';\r\nimport { CardContext } from './ListDragAndDrop';\r\n\r\nconst Container = ({type, children}) => {\r\n    const { handleDrop } = useContext(CardContext);\r\n\r\n    const [{ isOver, canDrop }, drop] = useDrop({\r\n        accept: ItemTypes.Card,\r\n        canDrop: (item, monitor) => { \r\n            return   item.isAvailable\r\n        },\r\n        drop: (item, monitor) => handleDrop(type, item.id),\r\n        collect: (monitor) => ({\r\n            isOver: !!monitor.isOver()\r\n          \r\n        }),\r\n    });\r\n\r\n    const isAvailable = (item) => {\r\n        return   item.isAvailable\r\n    }\r\n\r\n    return (<div ref={drop} style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        background: isOver? 'grey' : ''\r\n    }}>\r\n\t\t\t{children}\r\n\t\t</div>);\r\n};\r\n\r\nexport default Container;\r\n","import React, { useState, useEffect, createContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card';\r\nimport Container from './Container';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nexport const ContainerStyle = styled.div`\r\n    background: green;\r\n    display: flex;\r\n\r\n   \r\n`\r\nexport const ListStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 40px;\r\n\r\n    .listHeader {\r\n        margin: 5px;\r\n    }\r\n\r\n    .listSearch {\r\n        margin: 5px;\r\n    }\r\n\r\n    .list {\r\n        background: #c7c3ea;\r\n        margin: 5px;\r\n        overflow-y:auto;\r\n        height:400px;\r\n    }\r\n\r\n    .listCard{\r\n        border: 1px solid;\r\n        padding: 5px;\r\n        margin: 5px;\r\n        background: grey;\r\n        font-weight: bold;\r\n        color: white;\r\n\r\n    }\r\n   \r\n`\r\n\r\nexport const CardContext = createContext({\r\n    handleDrop: null\r\n});\r\n\r\nconst ListDragAndDrop = ({options, selected, onChange, onClick}) => {\r\n    const [selectedList, setSelectedList] = useState([]);\r\n\r\n    const [optionSearch, setOptionSearch] = useState(\"\");\r\n    const [selectedSearch, setSelectedSearch] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        selected && setSelectedList(selected);\r\n    }, [selected]);\r\n\r\n    const handleSelect = id => {\r\n        let index = selectedList.findIndex(x => x === id);\r\n        if (index > 0) return;\r\n        let s = [...selectedList];\r\n        s.push(id);\r\n        setSelectedList(s);\r\n\r\n        onChange(s);\r\n\t};\r\n    \r\n    const handleDeSelect = id => {\r\n        let s = selectedList.filter(e => e !== id)\r\n        setSelectedList(s);\r\n\r\n        onChange(s);\r\n    };\r\n\r\n    const handleDrop = (type, id) =>{\r\n        if (type === \"options\"){\r\n            handleDeSelect(id);\r\n        }else{\r\n            handleSelect(id);\r\n        }\r\n    }\r\n\r\n    const handleOnClick = (id) =>{\r\n        onClick && onClick(id);\r\n    }\r\n    \r\n    return (\r\n    <DndProvider backend={HTML5Backend}>\r\n        <CardContext.Provider value={{ handleDrop, handleOnClick }}>\r\n            <ContainerStyle>\r\n                <ListStyle>\r\n                    <h3 className=\"listHeader\">Selected</h3>\r\n                    <div className=\"listSearch\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={selectedSearch}\r\n                            onChange={(e) => {setSelectedSearch(e.target.value)}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"list\">\r\n                    <Container className=\"list\" type = \"selected\">\r\n                        {selectedList\r\n                                    .filter(x => \r\n                                        options\r\n                                        .filter(x=>x.label.toUpperCase().includes(selectedSearch.toUpperCase()))\r\n                                        .map(a => a.value).includes(x))\r\n                                    .map((value) => {\r\n                                    let option = options.find(x => x.value === value)\r\n                                return(\r\n                                    <div className=\"listCard\">\r\n                                        <Card text={option.label} \r\n                                        isAvailable = {option.isAvailable} \r\n                                        id={value}\r\n                                        onClick = {onClick}/>\r\n                                    </div>);\r\n                            })\r\n                        }\r\n                    </Container>\r\n                    </div>\r\n                </ListStyle>\r\n                <ListStyle>\r\n                    <h3 className=\"listHeader\">All</h3>\r\n                    <div className=\"listSearch\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={optionSearch}\r\n                            onChange={(e) => {setOptionSearch(e.target.value)}}\r\n                        />\r\n                    </div>\r\n                    <div className=\"list\">\r\n                    <Container className=\"list\" type =\"options\">\r\n                            {options\r\n                                .filter(x => x.label.toUpperCase().includes(optionSearch.toUpperCase()))\r\n                                .filter(x=>!selectedList.includes(x.value))\r\n                                .map((v) => {\r\n                                     return(\r\n                                     <div className=\"listCard\">\r\n                                        <Card text={v.label}\r\n                                         isAvailable = {v.isAvailable} \r\n                                         id={v.value}\r\n                                         onClick = {onClick}/>\r\n                                     </div>);\r\n                            })}\r\n                    </Container>\r\n                    </div>\r\n                </ListStyle>\r\n            </ContainerStyle>\r\n        </CardContext.Provider>\r\n    </DndProvider>);\r\n};\r\n\r\nexport default ListDragAndDrop;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateVersion,  SaveVersion } from \"../Store/Product/version\";\r\nimport { updateOriginalVersion } from \"../Store/Product/originalVersion\";\r\nimport styled from 'styled-components';\r\nimport BitCheckBoxes from './BitCheckBoxes';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Moment from 'react-moment';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport ListDragAndDrop from './dnd/ListDragAndDrop';\r\nimport _ from 'lodash';\r\n\r\nimport { ProductService } from \"../Service/ProductService\";\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nconst VersionDetail = ({mode, selected, onChange, onSave}) => {\r\n     const [version, setVersion] = useState(null);\r\n    // const [originalVersion, setOriginalVersion] = useState(null);\r\n    //const version = useSelector(state => state.entities.version);\r\n    //const originalVersion = useSelector(state => state.entities.originalVersion);\r\n    const [productLines, setProductLines] = useState([]);\r\n    const [productCodes, setProductCodes] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n    //const [isDirtyVersion, setIsDirtyVersion] = useState(false);\r\n\r\n    const productSrv = new ProductService();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() =>{\r\n      if(selected){\r\n        // dispatch(updateVersion(selected));\r\n        setVersion(selected);\r\n        // dispatch(updateOriginalVersion(selected));\r\n        setProductLines(selected.ProductLines?? []);\r\n        loadCodes();\r\n      }\r\n    },[selected]);\r\n\r\n    useEffect( () =>{\r\n      setOptions(getOptions(productCodes));\r\n  },[productCodes]);\r\n\r\n  useEffect( () =>{\r\n    if (version){\r\n      let v = _.cloneDeep(version);\r\n      v.ProductLines = productLines\r\n     // dispatch(updateVersion(v));\r\n     setVersion(v)\r\n    }\r\n},[productLines]);\r\n\r\nuseEffect( () =>{\r\n  //handleIsDirtyVersion()\r\n  version && onChange && onChange(version);\r\n},[version]);\r\n\r\n\r\n// useEffect( () =>{\r\n//   handleIsDirtyVersion()\r\n// },[originalVersion]);\r\n\r\n\r\n// const handleIsDirtyVersion = () =>{\r\n//   let isDirtTemplate = !_.isEqual(version, originalVersion);\r\n\r\n//   setIsDirtyVersion(isDirtTemplate);\r\n// }\r\n\r\n    const loadCodes = async() => {\r\n      let items = await productSrv.getProductCodes();\r\n            let is = items.map((item) => {\r\n              return {...item, isAvailable: true, label: item.Code}\r\n            })\r\n            setProductCodes(is);\r\n          //  setOptions(getOptions(is));\r\n    }\r\n\r\n    const getOptions = (items) => {\r\n      let is = _.cloneDeep(items);\r\n        return is\r\n          .map((i) => {\r\n            return {label: i.label, isAvailable: i.isAvailable, value:i.Id}\r\n      })\r\n    }\r\n\r\n       var  SalesChannels =\r\n       {\r\n           None: 0,\r\n           ContactCentre: 1,\r\n           Online: 2,\r\n           Aggregators: 4\r\n       }\r\n   \r\n       var Scales = \r\n       {\r\n           None: 0,\r\n           Single: 1,\r\n           Couple: 2,\r\n           Family: 4,\r\n           SingleParentFamily: 8\r\n       }\r\n   \r\n       var ScaleQuoteMaps =\r\n       {\r\n           None: 0,\r\n           SingleToSingle: 1,\r\n           CoupleToCouple: 2,\r\n           CoupleToFamily: 4,\r\n           FamilyToCouple: 8,\r\n           FamilyToFamily: 16,\r\n           SingleParentFamilyToCouple: 32,\r\n           SingleParentFamilyToFamily: 64,\r\n           SingleParentFamilyToSingleParentFamily: 128\r\n       }\r\n\r\n\r\n      var StateCovers = \r\n      {\r\n          None: 0,\r\n          NSW: 1,\r\n          QLD: 2,\r\n          SA: 4,\r\n          TAS: 8,\r\n          VIC: 16,\r\n          WA: 32,\r\n          ACT: 64,\r\n          NT: 128\r\n      }\r\n\r\n      // const SaveVersion =  async() => {\r\n      //     console.log(version)\r\n      //     let v = {};\r\n      //     let savedToDB = false;\r\n      //     if (version.SuiteId && version.SuiteId > 0){\r\n      //      // v = await productSrv.SaveVersionWithDependents(version);\r\n      //      dispatch(SaveVersion(version));\r\n      //       savedToDB = true;\r\n      //     }else{\r\n      //       v = _.cloneDeep(version);\r\n      //       v.ApprovalStatus = \"Pending\";\r\n      //       dispatch(updateVersion(v));\r\n      //       dispatch(updateOriginalVersion(v));\r\n      //     }\r\n        \r\n      //   console.log(v);\r\n      //  //let v = {...version, Id};\r\n      // //  setVersion(v);\r\n      // //  setOriginalVersion(v);\r\n      //  onSave(v, savedToDB, mode);\r\n      // }\r\n\r\n      // const updateStartDate = (date) => {\r\n      //   let v= {...version, StartDate:date}\r\n      //   setVersion({...version, StartDate:date});\r\n      //   //dispatch(updateVersion(v));\r\n      // }\r\n\r\n      // const updateEndDate = (date) => {\r\n      //   let v= {...version, EndDate:date}\r\n      //   setVersion(v);\r\n      //   //dispatch(updateVersion(v));\r\n      // }\r\n\r\n      // const updateDescription = (e) => {\r\n      //   let v= {...version, Discription:e}\r\n      //   dispatch(updateVersion(v));\r\n      //   console.log(e);\r\n      // }\r\n\r\n      // const updateMinAge = (e) => {\r\n      //   let v= {...version, MinAge:e}\r\n      //   dispatch(updateVersion(v));\r\n      //   console.log(e);\r\n      // }\r\n\r\n      // const toggleIsActive = () => {\r\n      //   let v= {...version, IsActive:!version.IsActive}\r\n      //   dispatch(updateVersion(v));\r\n      // }\r\n\r\n      // const toggleStaffSubsidy = () => {\r\n      //   let v= {...version, StaffSubsidy:!version.StaffSubsidy}\r\n      //   dispatch(updateVersion(v));\r\n      // }\r\n\r\n      // const updateSalesChannel = (value) => {\r\n      //   let v= {...version, SalesChannels:value}\r\n      //   dispatch(updateVersion(v));\r\n      // }\r\n\r\n      // const updateScale = (value) => {\r\n      //   let v= {...version, Scale:value}\r\n      //   dispatch(updateVersion(v));\r\n      // }\r\n\r\n      // const updateState = (value) => {\r\n      //   let v= {...version, StateCoverge:value}\r\n      //   dispatch(updateVersion(v));\r\n      // }\r\n\r\n      // const updateScaleQuoteMap = (value) => {\r\n      //   let v= {...version, ScaleQuoteMap:value}\r\n      //   dispatch(updateVersion(v));\r\n      // }\r\n\r\n      const setField = ({target}) => {\r\n        setVersion({...version, [target.name]: target.value});\r\n       // onChange && onChange(version);\r\n      };\r\n\r\n      const setBit = (target) => {\r\n        setVersion({...version, [target.name]: target.value});\r\n       // onChange && onChange(version);\r\n      };\r\n\r\n      const setOption = ({target}) => {\r\n        setVersion({...version, [target.name]: target.value === \"on\"? true : false});\r\n       // onChange && onChange(version);\r\n      };\r\n\r\n      const onProductLinesChange = (selectedValues) => {\r\n        let cItems = [...productLines];\r\n        let cItemIds = cItems.map(x => x.ProductCodeId);\r\n\r\n        let deletedItems = _.difference(cItemIds,selectedValues);\r\n        cItems = cItems.filter(x=>!deletedItems.includes(x.ProductCodeId) )\r\n\r\n        let addedItems = _.difference(selectedValues,cItemIds);\r\n        addedItems.map((id)=>{\r\n         return cItems.push(\r\n          productSrv.getNewProductLine(selected.Id, id)\r\n           );\r\n        })\r\n        setProductLines(cItems);\r\n      };\r\n\r\n      const onProductLinesClick = (id) => {\r\n        console.log(id);\r\n      }\r\n    return (\r\n      \r\n          <Container>\r\n        <h1>Version detail - {version?.Id} -  suite - {version?.SuiteId}</h1>\r\n        {onSave && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    SaveVersion();\r\n                  }}\r\n                  >\r\n                  {version.Id > 0 || version.ApprovalStatus === \"Pending\"? \"Save\" : \"Create\"}\r\n        </AwesomeButton>}\r\n        {version && <div>\r\n          <Moment format=\"YYYY/MM/DD\" date ={version?.StartDate}/> - <Moment format=\"YYYY/MM/DD\" date ={version?.EndDate}/>\r\n          <DatePicker selected={Date.parse(version.StartDate)} onChange={date => setVersion({...version, StartDate:date})} />\r\n          <DatePicker selected={Date.parse(version.EndDate)} onChange={date => setVersion({...version, EndDate:date})} />\r\n        </div>}\r\n       \r\n        {version && <Tabs forceRenderTabPanel={\"false\"}>\r\n    <TabList >\r\n      <Tab>Detail</Tab>\r\n      <Tab>Product Codes</Tab>\r\n    </TabList>\r\n\r\n    <TabPanel show={\"true\"}>\r\n    <div className = \"header\">\r\n            <BitCheckBoxes items= {SalesChannels} value = {version.SalesChannels} name= \"SalesChannels\" onChange={setBit}/>\r\n            <BitCheckBoxes items= {StateCovers} value = {version.StateCoverge} name= \"StateCoverge\" onChange={setBit}/>\r\n            <BitCheckBoxes items= {Scales} value = {version.Scale} name= \"Scale\" onChange={setBit}/>\r\n            <BitCheckBoxes items= {ScaleQuoteMaps} value = {version.ScaleQuoteMap} name= \"ScaleQuoteMap\" onChange={setBit}/>\r\n          </div>\r\n          <div className = \"mid\">\r\n              <div>\r\n                <span>Description</span>\r\n                <input\r\n                  type=\"text\"\r\n                  value={version.Description}\r\n                  name=\"Description\"\r\n                  onChange={setField}\r\n                />\r\n              </div>\r\n              <div>\r\n                <span>Min Age</span>\r\n                <input\r\n                  type=\"text\"\r\n                  value={version.MinAge}\r\n                  name=\"MinAge\"\r\n                  onChange={setField}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={version.IsActive}\r\n                    name=\"IsActive\"\r\n                    onChange={setOption}\r\n                />\r\n                        Is Active\r\n                </label>\r\n              </div>\r\n              <div>\r\n                <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={version.StaffSubsidy}\r\n                    name=\"StaffSubsidy\"\r\n                    onChange={setOption}\r\n                />\r\n                       Staff Subsidy\r\n                </label>\r\n              </div>\r\n          </div>\r\n    </TabPanel>\r\n    <TabPanel>\r\n      {options && productCodes && \r\n            <ListDragAndDrop \r\n                options = {options} \r\n                selected = {productLines?.map(x=>x.ProductCodeId)} \r\n                onChange = {onProductLinesChange}\r\n                onClick = {onProductLinesClick}/>}\r\n    </TabPanel>\r\n  </Tabs>}\r\n         \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default VersionDetail;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport _ from 'lodash'; \r\nimport Moment from 'react-moment';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Select from 'react-select'\r\nimport Modal from \"./Model\";\r\nimport VersionDetail from \"./VersionDetail\";\r\nimport  { ProductService } from \"../Service/ProductService\";\r\nimport uuid from 'react-uuid';\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const SuiteStyle = styled.div`\r\n    background: blue;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\nexport const SuiteDetailStyle = styled.div`\r\n    background: blue;\r\n    display: flex;\r\n    height: 250px;\r\n`\r\n\r\nexport const VersionsStyle = styled.div`\r\n    background: yellow;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n    display: flex;\r\n`\r\n\r\nexport const VersionListStyle = styled.div`\r\n    background: yellow;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n    width: 300px;\r\n`\r\n\r\nconst Suite = ({children}) => {\r\n    return (<SuiteStyle>{children}</SuiteStyle> );\r\n}\r\n\r\nconst SuiteDetail = ({children}) => {\r\n  return (<SuiteDetailStyle>{children}</SuiteDetailStyle> );\r\n}\r\n\r\nconst Versions = ({children}) => {\r\n  return (<VersionsStyle>{children}</VersionsStyle> );\r\n}\r\n\r\nconst VersionList = ({children}) => {\r\n  return (<VersionListStyle>{children}</VersionListStyle> );\r\n}\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst ProductEdit = ({selected, originalSelected, onChange, onSave}) => {\r\n  //const dispatch = useDispatch();\r\n  const productSrv = new ProductService();\r\n\r\n  const [suite, setSuite] = useState(null);\r\n  //const [originalSuite, setOriginalSuite] = useState(productSrv.getNewSuite());\r\n  // const suite = useSelector(state => state.entities.suite);\r\n  // const originalSuite = useSelector(state => state.entities.originalSuite);\r\n  const [version, setVersion] = useState(null);\r\n // const version = useSelector(state => state.entities.version);\r\n  const [categories, setCategories] = useState([]);\r\n // const [isDirtySuite, setIsDirtySuite] = useState(false);\r\n\r\n  const modalRefNewVersion = React.useRef();\r\n  const modalRefCloneVersion = React.useRef();\r\n  \r\n     const openModalNewVersion = () => {\r\n       if (suite){\r\n          setVersion({...productSrv.getNewVersion(suite.Id), Mode:'new'});\r\n          modalRefNewVersion.current.openModal();\r\n       }\r\n    };\r\n\r\n    const closeModalNewVersion = () => {\r\n      modalRefNewVersion.current.close()\r\n    };\r\n\r\n    const saveModalNewVersion = () => {\r\n      //setVersion({...version, Mode:''});\r\n      updateVersion({...version});\r\n      modalRefNewVersion.current.close()\r\n    };\r\n\r\n    const openModalCloneVersion = () => {\r\n      if (version && !_.isEmpty(version)){\r\n        modalRefCloneVersion.current.openModal()\r\n      }\r\n    };\r\n\r\n    const closeModalCloneVersion = () => {\r\n      modalRefCloneVersion.current.close()\r\n    };\r\n\r\n    const saveModalCloneVersion = () => {\r\n      //setVersion({...version, Mode:''});\r\n      updateVersion({...version, Id: 0, UniqueId: uuid().toString()});\r\n      modalRefCloneVersion.current.close()\r\n    };\r\n\r\n    useEffect( () => {\r\n      loadCategories()\r\n     }, []);\r\n    \r\n  useEffect( () => {\r\n      selected && setSuite(selected);\r\n   }, [selected]);\r\n\r\n  //  useEffect( () => {\r\n  //     originalSelected && setOriginalSuite(originalSelected);\r\n  //  }, [originalSelected]);\r\n\r\n   useEffect( () =>{\r\n     if (version && !_.isEmpty(version)){\r\n      let v = suite.Versions.find( ({ Id }) => Id === version.Id)\r\n       setVersion(v?? null);\r\n      //  if (v && !_.isEqual(v,version))\r\n      //    dispatch(versionAction.updateVersion(v?? {}));\r\n     }\r\n   // handleIsDirtySuite()\r\n   suite && onChange && onChange(suite);\r\n  },[suite]);\r\n  \r\n  \r\n  // useEffect( () =>{\r\n  //   handleIsDirtySuite()\r\n  // },[originalSuite]);\r\n  \r\n  \r\n  // const handleIsDirtySuite = () =>{\r\n  //   let isDirtTemplate = !_.isEqual(suite, originalSuite);\r\n  \r\n  //  setIsDirtySuite(isDirtTemplate);\r\n  // }\r\n\r\n\r\n   const loadCategories = async() => {\r\n    let cs = await productSrv.getProductCategories();\r\n     \r\n    setCategories(cs);\r\n  }\r\n\r\n  //  const updateName = (value) => {\r\n  //   let s = {...suite, Name : value}\r\n  //   setSuite(s);\r\n  // }\r\n\r\n  const updateCategory = (value) => {\r\n    setSuite({...suite, CategoryId : value.Id});\r\n  }\r\n\r\n  const setFeid = ({target}) => {\r\n    setSuite({...suite, [target.name]: target.value});\r\n  };\r\n\r\n\r\n   const selectVersion = (version) => {\r\n    setVersion(version);\r\n    //dispatch(versionAction.updateVersion(version))\r\n     console.log(version);\r\n   }\r\n\r\n  //  const onVersionSave = (version, savedToDB, mode) => {\r\n  //    let s = _.cloneDeep(suite);\r\n  //    let oS = _.cloneDeep(originalSuite);\r\n\r\n  //   let suite = updateVersion(s,version);\r\n  //   let originalSuite = updateVersion(oS,version);\r\n  //   dispatch(updateSuite(suite));\r\n  //   if (savedToDB) dispatch(updateOriginalSuite(originalSuite));\r\n  //  }\r\n\r\n  //  const updateVersion = (s,version) =>{\r\n  //   let index = s.Versions.findIndex( ({ UniqueId }) => UniqueId === version.UniqueId);\r\n  //   if (index > -1){\r\n  //     s.Versions[index] = version;\r\n  //   }else\r\n  //   {\r\n  //     s.Versions.push(version);\r\n  //   }\r\n  //   return s;\r\n  //  }\r\n\r\n  const updateVersion = (version) =>{\r\n    let s = _.cloneDeep(suite);\r\n   let index = s.Versions.findIndex( ({ UniqueId }) => UniqueId === version.UniqueId);\r\n   if (index > -1){\r\n     s.Versions[index] = version;\r\n   }else\r\n   {\r\n     s.Versions.push(version);\r\n   }\r\n   setSuite(s);\r\n  }\r\n\r\n  const removeVersion = (UniqueId) => {\r\n    let s = _.cloneDeep(suite);\r\n    let index = s.Versions.findIndex( ({ UniqueId }) => UniqueId === version.UniqueId);\r\n    if (index > -1){\r\n      s.Versions.splice(index, 1);\r\n    }\r\n    setSuite(s);\r\n  }\r\n\r\n   const SaveSuite = async() => {\r\n    console.log(suite)\r\n   // let s = await onSave(suite);\r\n    onSave && await onSave(suite)\r\n   \r\n   // console.log(s);\r\n    // dispatch(updateSuite(s));\r\n    // dispatch(updateOriginalSuite(s));\r\n   }\r\n\r\n   const onVersionChange = (v) => {\r\n\r\n   (!_.isEqual(version,v)) && setVersion(v);\r\n   }\r\n\r\n   const onVersionDetailChange = (v) => {\r\n\r\n    (!_.isEqual(version,v)) && setVersion(v) ;\r\n    (!_.isEqual(version,v)) && updateVersion(v);\r\n    }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Product Edit</h1>\r\n        <Suite>\r\n        <h1>Product Suite - {suite?.Id}</h1>\r\n         <SuiteDetail>\r\n          <InputBlock>\r\n              <span>Name</span>\r\n              <input\r\n                type=\"text\"\r\n                value={suite?.Name}\r\n                name=\"Name\"\r\n                onChange={setFeid}\r\n              />\r\n            </InputBlock>\r\n            <InputBlock>\r\n              <span>Category {suite?.CategoryId}</span>\r\n              <Select    \r\n                options={categories}\r\n                value={categories?.find(x => x.Id === suite?.CategoryId)?? []}\r\n                getOptionLabel={ x => x.Name}\r\n                getOptionValue={ x => x.Id}\r\n                name=\"CategoryId\"\r\n                onChange={updateCategory}\r\n                />\r\n            </InputBlock>\r\n         </SuiteDetail>\r\n         {onSave && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    SaveSuite();\r\n                  }}\r\n                  >\r\n                  {suite?.Id > 0 ? \"Save\" : \"Create\"}\r\n        </AwesomeButton>}\r\n        </Suite>\r\n        <Versions>\r\n          <VersionList>\r\n          <h1>Version list</h1>\r\n         {suite && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalNewVersion();\r\n                  }}\r\n                  >\r\n                  New\r\n              </AwesomeButton>\r\n              }\r\n              {suite &&\r\n              <Modal ref={modalRefNewVersion}>\r\n                    <h1>Create New Version</h1>\r\n                        \r\n                    <VersionDetail \r\n                      mode=\"new\" \r\n                      selected={version}\r\n                      onChange={onVersionChange}\r\n                      />\r\n                    <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalNewVersion();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        saveModalNewVersion();\r\n                    }}\r\n                    >\r\n                    save\r\n                </AwesomeButton>\r\n                </Modal>\r\n              }\r\n              {version && suite.Versions.length > 0 &&\r\n                <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalCloneVersion();\r\n                  }}\r\n                  >\r\n                  Clone\r\n              </AwesomeButton>\r\n}\r\n{version && suite.Versions.length > 0 &&\r\n              <Modal ref={modalRefCloneVersion}>\r\n                    <h1>Create Clone Version</h1>\r\n                        \r\n                    <VersionDetail\r\n                     selected={version}\r\n                     mode=\"clone\"  \r\n                     onChange={onVersionChange}\r\n                     />\r\n                    <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalCloneVersion();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        saveModalCloneVersion();\r\n                    }}\r\n                    >\r\n                    Save\r\n                </AwesomeButton>\r\n                </Modal>\r\n}\r\n          <ListGroup as=\"ul\">\r\n            {suite?.Versions && \r\n              suite.Versions.map((v, i) => {\r\n              return (\r\n                <>\r\n                <ListGroup.Item as=\"li\" key={i} onClick = {() => {selectVersion(v)}} active = {v.UniqueId === version?.UniqueId} >\r\n                        <Moment format=\"YYYY/MM/DD\" date ={v.StartDate}/> - <Moment format=\"YYYY/MM/DD\" date ={v.EndDate}/>\r\n                        <AwesomeButton\r\n                        type=\"primary\"\r\n                        ripple\r\n                        onPress={() => {\r\n                          removeVersion(v.UniqueId);\r\n                        }}\r\n                        >\r\n                        X\r\n                    </AwesomeButton>\r\n                      </ListGroup.Item>\r\n                </>);\r\n              })\r\n            }\r\n\t\t\t\t  </ListGroup>    \r\n          </VersionList>\r\n          {version && suite.Versions.length > 0 &&\r\n             <VersionDetail mode=\"detail\" selected={version} onChange={onVersionDetailChange}/>\r\n          }\r\n        </Versions>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductEdit;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadSuite, updateSuite, SaveSuite } from \"../Store/Product/suite\";\r\nimport styled from 'styled-components';\r\n\r\nimport ProductEdit from \"./productEdit\";\r\nimport  { ProductService } from \"../Service/ProductService\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport _ from 'lodash'; \r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst ProductEditContainer = () => {\r\n   // const [suite, setSuite] = useState(ProductSrv.getNewSuite());\r\n     const suite = useSelector(state => state.entities.suite);\r\n     const originalSuite = useSelector(state => state.entities.originalSuite);\r\n     const [isDirtySuite, setIsDirtySuite] = useState(false);\r\n\r\n     const dispatch = useDispatch();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const { Id } = useParams();\r\n    \r\n    const productSrv = new ProductService();\r\n\r\n  useEffect( () => {\r\n    LoadSuite()\r\n   }, []);\r\n\r\n   useEffect( () => {\r\n     if (suite && location.pathname.indexOf(\"/new\") > -1 && suite.Id > 0){\r\n      let newLocation = location.pathname.replace(\"/new\", \"/\" + suite.Id );\r\n           history.push(newLocation);\r\n     }\r\n        handleIsDirtySuite()\r\n    },[suite]);\r\n    \r\n    \r\n    useEffect( () =>{\r\n        handleIsDirtySuite()\r\n    },[originalSuite]);\r\n    \r\n    \r\n    const handleIsDirtySuite = () =>{\r\n        let isDirtTemplate = !_.isEqual(suite, originalSuite);\r\n        \r\n        setIsDirtySuite(isDirtTemplate);\r\n    }\r\n\r\n   const LoadSuite = async() => {\r\n\r\n      let suite = {};\r\n      if (Id === \"new\"){\r\n        suite = productSrv.getNewSuite();\r\n      }else{\r\n       // suite = await productSrv.getSuiteWithVersions(Id);\r\n       suite = dispatch(loadSuite(Id));\r\n      }\r\n      console.log(suite);\r\n     // dispatch(updateSuite(suite));\r\n\r\n   }\r\n\r\n   const Change = (s) => {\r\n    (!_.isEqual(suite, s)) && dispatch(updateSuite(s));\r\n   }\r\n\r\n\r\n   const Save = async(s) => {\r\n    console.log(s)\r\n\r\n        dispatch(SaveSuite(s));\r\n\r\n   return s;\r\n   }\r\n\r\n  //  const Save = async(suite) => {\r\n  //   console.log(suite)\r\n  //   let s = {};\r\n  //     if (suite.Id === 0){\r\n  //       //s = await productSrv.SaveSuiteWithDependents(suite);\r\n  //       dispatch(SaveSuite(suite));\r\n  //       let newLocation = location.pathname.replace(\"/new\", \"/\" + s.Id );\r\n  //       history.push(newLocation);\r\n  //     }else{\r\n  //      // s = await productSrv.SaveSuiteWithDependents({...suite, versions: []});\r\n  //       dispatch(SaveSuite(suite));\r\n  //     }\r\n  //  // console.log(s);\r\n  //  // dispatch(updateSuite(s));\r\n  //  return s;\r\n  //  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n       <ProductEdit \r\n        selected = {suite} \r\n        originalSelected = {originalSuite} \r\n        onChange = {Change}\r\n        onSave = {isDirtySuite && Save}/>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductEditContainer;\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const serviceGetFeature = createAction(\"service/GetFeature\");\r\nexport const serviceSaveFeature = createAction(\"service/SaveFeature\");","import axios from 'axios'\r\n\r\nlet api = '/api/Feature/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    getItemsData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'GetItems/' + id\r\n    }),\r\n    getDataWithDependents: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'Dependents/' + id\r\n    }),\r\n    getDataListWithDependents: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'Dependents/' \r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    postListData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + 'List/',\r\n        'data':data\r\n    }),\r\n    postDataWithItem: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + '/Items',\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api + data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/FeatureGroup/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api + data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/FeatureType/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api + data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/FeatureItem/';\r\n\r\nconst instance = axios.create({\r\n    baseURL:  process.env.REACT_APP_API_BASE_URL, // 'http://localhost:64909/',\r\n});\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    postDataList: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + 'item/list',\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import feature from \"../data/Feature\";\r\nimport featureGroup from \"../data/FeatureGroup\";\r\nimport featureType from \"../data/FeatureType\";\r\nimport featureItem from \"../data/FeatureItem\";\r\n\r\nimport * as apiAction from '../Store/api'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class FeatureService {\r\n  constructor(dispatch, onSuccess, onError) {\r\n    this.dispatch = dispatch;\r\n    this.onSuccess = onSuccess;\r\n    this.onError = onError;\r\n  }\r\n\r\n  getFeatures = async() => {\r\n    try {\r\n      let response = await feature.getDataList();\r\n      return response.data;\r\n    } catch(err) {\r\n            if (err.response) {\r\n               // setError(\"Failure \"+ err.response.status);\r\n            } else if (err.request) {\r\n               // setError(\"client never received a response, or request never left\");\r\n            } else {\r\n              // anything else\r\n            }\r\n    }\r\n}\r\n\r\n  getFeatureWithDependents = async(id) => {\r\n  try {\r\n    let response = await feature.getDataWithDependents(id);\r\n    if (this.dispatch)\r\n    this.dispatch(apiAction.apiCallSuccess(response.data[0]));\r\n    if (this.onSuccess)\r\n    this.dispatch({ type: this.onSuccess, payload: response.data[0] });\r\n    return response.data[0];\r\n  } catch(err) {\r\n    if (err.response) {\r\n     if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n     } else if (err.request) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n     } else {\r\n       // anything else\r\n     }\r\n}\r\n}\r\n\r\ngetFeatureListWithDependents = async() => {\r\n  try {\r\n    let response = await feature.getDataListWithDependents();\r\n    return response.data;\r\n  } catch(err) {\r\n    if (err.response) {\r\n     if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n     } else if (err.request) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n     } else {\r\n       // anything else\r\n     }\r\n}\r\n}\r\n\r\n  getFeature = async(id) => {\r\n  try {\r\n    let response = await feature.getData(id);\r\n    if (this.dispatch)\r\n    this.dispatch(apiAction.apiCallSuccess(response.data));\r\n    if (this.onSuccess)\r\n    this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    return response.data;\r\n  } catch(err) {\r\n    if (err.response) {\r\n     if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n     } else if (err.request) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n     } else {\r\n       // anything else\r\n     }\r\n}\r\n}\r\n\r\n  getFeatureWithItem = async(id) => {\r\n  try {\r\n    let response = await feature.getItemsData(id);\r\n    if (this.dispatch)\r\n    this.dispatch(apiAction.apiCallSuccess(response.data));\r\n    if (this.onSuccess)\r\n    this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    return response.data;\r\n  } catch(err) {\r\n    if (err.response) {\r\n     if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n     } else if (err.request) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n     } else {\r\n       // anything else\r\n     }\r\n}\r\n}\r\n\r\n  getGroups = async() => {\r\n  try {\r\n    let response = await featureGroup.getDataList();\r\n    return response.data;\r\n  } catch(err) {\r\n    if (err.response) {\r\n     if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n     } else if (err.request) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n     } else {\r\n       // anything else\r\n     }\r\n}\r\n}\r\n\r\n  getTypes = async() => {\r\n  try {\r\n    let response = await featureType.getDataList();\r\n    return response.data;\r\n  } catch(err) {\r\n    if (err.response) {\r\n     if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n     } else if (err.request) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n     } else {\r\n       // anything else\r\n     }\r\n}\r\n}\r\n\r\n  getNewFeature = () => {\r\n    return {\r\n        Id: 0,\r\n        UniqueId: uuidv4().toString(),\r\n        GroupId: 1,\r\n        TypeId: 1,\r\n        Items: []\r\n    };\r\n}\r\n\r\ngetNewFeatureItem = (featureId,itemId) => {\r\n  return {\r\n    Id: 0, \r\n    FeatureId: featureId,\r\n    ItemId: itemId,\r\n    UniqueId: uuidv4().toString()\r\n  };\r\n}\r\n\r\n  getNewGroup = () => {\r\n  return {\r\n      Id: 0,\r\n      UniqueId: uuidv4().toString(),\r\n  };\r\n}\r\n\r\n  getNewType = () => {\r\n  return {\r\n      Id: 0,\r\n      UniqueId: uuidv4().toString(),\r\n  };\r\n}\r\n\r\n\r\n  SaveFeature = async (cc) => {\r\n    try {\r\n        let response = await feature.postData(cc);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n }\r\n}\r\n\r\n  SaveFeatures = async (cc) => {\r\n  try {\r\n      let response = await feature.postListData(cc);\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n      return response.data;\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\n  SaveFeatureWithItems = async (f) => {\r\n  try {\r\n      let response = await feature.postDataWithItem(f);\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n      return response.data;\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\n  SaveItems = async (group) => {\r\n  try {\r\n      let response = await featureItem.postDataList(group);\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n      return response.data;\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\nDeleteFeature = async (id) => {\r\n  try {\r\n      let response = await feature.removeData(id);\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n      return response.data;\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n    }\r\n  }\r\n\r\n  SaveGroup = async (cc) => {\r\n  try {\r\n      let response = await featureGroup.postData(cc);\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n      return response.data;\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n      }\r\n    } \r\n\r\n    DeleteGroup = async (id) => {\r\n      try {\r\n          let response = await featureGroup.removeData(id);\r\n          if (this.dispatch)\r\n          this.dispatch(apiAction.apiCallSuccess(response.data));\r\n          if (this.onSuccess)\r\n          this.dispatch({ type: this.onSuccess, payload: response.data });\r\n          return response.data;\r\n        } catch(err) {\r\n          if (err.response) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n           } else if (err.request) {\r\n             if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n           } else {\r\n             // anything else\r\n           }\r\n        }\r\n      }\r\n\r\n  SaveType = async (cc) => {\r\n  try {\r\n      let response = await featureType.postData(cc);\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n      return response.data;\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n    }\r\n  }\r\n\r\n  DeleteType = async (id) => {\r\n    try {\r\n        let response = await featureType.removeData(id);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n      }\r\n    }\r\n}\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { serviceGetFeature, serviceSaveFeature } from './service';\r\nimport { FeatureService } from '../../Service/FeatureService';\r\n\r\nconst featureSrv = new FeatureService();\r\n\r\nexport const featureReceived = createAction(\"feature/featureReceived\");\r\nexport const featureSaved = createAction(\"feature/featureSaved\");\r\n\r\nconst  featureSlice = createSlice({\r\n    name: 'feature',\r\n    initialState: featureSrv.getNewFeature(),\r\n    reducers: {\r\n      updateFeature(feature, action){\r\n        return action.payload;\r\n      },\r\n    },\r\n  })\r\n  \r\n  export const {\r\n    updateFeature } = featureSlice.actions\r\n  export default featureSlice.reducer\r\n\r\n // Action Creators\r\n\r\n  export const loadFeature = (id) => serviceGetFeature({\r\n    data: id,\r\n    onSuccess: featureReceived.type\r\n  });\r\n\r\n  export const saveFeature = (feature) => serviceSaveFeature({\r\n    data: feature,\r\n    onSuccess: featureSaved.type\r\n  });\r\n\r\n\r\n\r\n  //createselector from reselect for cachng","import axios from 'axios'\r\n\r\nlet api = '/api/ClinicalCategory/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    getItemsData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'GetItems/' + id\r\n    }),\r\n    getDependentsData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + 'Dependents/' + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    postDataWithClinicalItems: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + \"ClinicalItems/\",\r\n        'data':data\r\n    }),\r\n    postDataWithDependents: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + \"Dependents/\",\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api + data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/ClinicalItem/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    postDataList: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + 'item/Group',\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import axios from 'axios'\r\n\r\nlet api = '/api/ClinicalProductCategory/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\n\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    postDataList: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api + 'ProductCategory/Group',\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import cC from \"../data/ClinicalCategory\";\r\nimport cI from \"../data/ClinicalItem\";\r\nimport cPC from \"../data/ClinicalProductCategory\";\r\n\r\nimport * as apiAction from '../Store/api'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class ClinicalCategoryService {\r\n  constructor(dispatch, onSuccess, onError) {\r\n    this.dispatch = dispatch;\r\n    this.onSuccess = onSuccess;\r\n    this.onError = onError;\r\n  }\r\n\r\n  getClinicalCategories = async() => {\r\n    try {\r\n      let response = await cC.getDataList();\r\n      return response.data;\r\n    } catch(err) {\r\n            if (err.response) {\r\n               // setError(\"Failure \"+ err.response.status);\r\n            } else if (err.request) {\r\n               // setError(\"client never received a response, or request never left\");\r\n            } else {\r\n              // anything else\r\n            }\r\n    }\r\n}\r\n\r\n\r\n  getClinicalCategotyWithItems = async(id) => {\r\n  try {\r\n    let response = await cC.getItemsData(id);\r\n    //return response.data;\r\n    if (this.dispatch)\r\n    this.dispatch(apiAction.apiCallSuccess(response.data));\r\n    if (this.onSuccess)\r\n    this.dispatch({ type: this.onSuccess, payload: response.data });\r\n  } catch(err) {\r\n         if (err.response) {\r\n          if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n          } else if (err.request) {\r\n            if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n          } else {\r\n            // anything else\r\n          }\r\n  }\r\n}\r\n\r\n  getClinicalCategotyWithDependents = async(id) => {\r\n  try {\r\n    let response = await cC.getDependentsData(id);\r\n    //return response.data;\r\n    if (this.dispatch)\r\n    this.dispatch(apiAction.apiCallSuccess(response.data[0]));\r\n    if (this.onSuccess)\r\n    this.dispatch({ type: this.onSuccess, payload: response.data[0] });\r\n  } catch(err) {\r\n    if (err.response) {\r\n     if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n     } else if (err.request) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n     } else {\r\n       // anything else\r\n     }\r\n}\r\n}\r\n\r\n\r\n  getNewClinicalCategory = () => {\r\n    return {\r\n        Id: 0,\r\n        UniqueId: uuidv4().toString(),\r\n        Code: '',\r\n        Name: '',\r\n        ClinicalItems: [],\r\n        ClinicalProductCategories: []\r\n    };\r\n}\r\n\r\n  getNewClinicalItem = () => {\r\n  return {\r\n      Id: 0,\r\n      UniqueId: uuidv4().toString(),\r\n  };\r\n}\r\n\r\n  getNewClinicalproductCategory = () => {\r\n  return {\r\n      Id: 0,\r\n      UniqueId: uuidv4().toString(),\r\n  };\r\n}\r\n\r\n  SaveClinicalCategory = async (cc) => {\r\n    try {\r\n        let response = await cC.postData(cc);\r\n        //return response.data;\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n }\r\n}\r\n\r\nDeleteClinicalCategory = async (id) => {\r\n  try {\r\n      let response = await cC.removeData(id);\r\n      //return response.data;\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\n  SaveClinicalCategoryWithClinicalItems = async (cc) => {\r\n  try {\r\n      let response = await cC.postDataWithClinicalItems(cc);\r\n      //return response.data;\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\n  SaveClinicalCategoryWithDependents = async (cc) => {\r\n  try {\r\n      let response = await cC.postDataWithDependents(cc);\r\n      //return response.data;\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\n\r\n  SaveClinicalItem = async (item) => {\r\n  try {\r\n      let response = await cI.postData(item);\r\n      //return response.data;\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n  SaveClinicalProductCategory = async (item) => {\r\n  try {\r\n      let response = await cPC.postData(item);\r\n      //return response.data;\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\n  SaveItems = async (group) => {\r\n  try {\r\n      let response = await cI.postDataList(group);\r\n      //return response.data;\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n\r\n  SaveProductCategories = async (group) => {\r\n  try {\r\n      let response = await cPC.postDataList(group);\r\n      //return response.data;\r\n      if (this.dispatch)\r\n      this.dispatch(apiAction.apiCallSuccess(response.data));\r\n      if (this.onSuccess)\r\n      this.dispatch({ type: this.onSuccess, payload: response.data });\r\n    } catch(err) {\r\n      if (err.response) {\r\n       if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n       } else if (err.request) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n       } else {\r\n         // anything else\r\n       }\r\n}\r\n}\r\n}\r\n\r\n","import axios from 'axios'\r\n\r\nlet api = '/api/Item/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import item from \"../data/Item\";\r\n\r\nimport * as apiAction from '../Store/api'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class ItemService {\r\n  constructor(dispatch, onSuccess, onError) {\r\n    this.dispatch = dispatch;\r\n    this.onSuccess = onSuccess;\r\n    this.onError = onError;\r\n  }\r\n\r\n  getItems = async() => {\r\n    try {\r\n      let response = await item.getDataList();\r\n      return response.data;\r\n    } catch(err) {\r\n            if (err.response) {\r\n               // setError(\"Failure \"+ err.response.status);\r\n            } else if (err.request) {\r\n               // setError(\"client never received a response, or request never left\");\r\n            } else {\r\n              // anything else\r\n            }\r\n    }\r\n}\r\n\r\n  getItem = async(id) => {\r\n  try {\r\n      let response = await item.getData(id);\r\n      if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n }\r\n}\r\n\r\n  getNewItem = () => {\r\n    return {\r\n        Id: 0,\r\n        UniqueId: uuidv4().toString(),\r\n    };\r\n}\r\n\r\n\r\n    SaveItem = async (cc) => {\r\n    try {\r\n        let response = await item.postData(cc);\r\n        if (this.dispatch)\r\n        this.dispatch(apiAction.apiCallSuccess(response.data));\r\n        if (this.onSuccess)\r\n        this.dispatch({ type: this.onSuccess, payload: response.data });\r\n        return response.data;\r\n      } catch(err) {\r\n        if (err.response) {\r\n         if (this.onError) this.dispatch({ type: this.onError, payload: err.response});\r\n         } else if (err.request) {\r\n           if (this.onError) this.dispatch({ type: this.onError, payload: err.request});\r\n         } else {\r\n           // anything else\r\n         }\r\n        }\r\n      }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport ListDragAndDrop from './dnd/ListDragAndDrop';\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\nimport { ItemService } from \"../Service/ItemService\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const SuiteStyle = styled.div`\r\n    background: blue;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\nexport const SuiteDetailStyle = styled.div`\r\n    background: blue;\r\n    display: flex;\r\n    height: 200px;\r\n`\r\n\r\nexport const VersionsStyle = styled.div`\r\n    background: yellow;\r\n    max-height:100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: orange;\r\n    max-height:100%;\r\n    width: 300px;\r\n \r\n`\r\n\r\n\r\n\r\nconst Versions = ({children}) => {\r\n  return (<VersionsStyle>{children}</VersionsStyle> );\r\n}\r\n\r\n\r\nconst FeatureItemDetail = ({selected, onChange}) => {\r\n  const featureSrv = new FeatureService();\r\n  const itemSrv = new ItemService();\r\n  const [featureId, setFeatureId] = useState(null);\r\n  const [originalFeatureItems, setOriginalFeatureItems] = useState([]);\r\n  const [featureItems, setFeatureItems] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n  const [isDirtyFeatureItems, setIsDirtyFeatureItems] = useState(false);\r\n\r\n  useEffect( () => {\r\n    loadItems();\r\n   }, []);\r\n\r\n   useEffect( () =>{\r\n    setOptions(getOptions(items));\r\n},[items]);\r\n\r\nuseEffect( () =>{   \r\n    if(selected) {\r\n        setFeatureId(selected.Id);\r\n        setFeatureItems(selected.Items);\r\n        setOriginalFeatureItems(selected.Items);\r\n     //   handleIsDirtyFeature()\r\n    }\r\n},[selected]);\r\n\r\nuseEffect( () =>{\r\n  handleIsDirtyFeatureItem()\r\n},[featureItems]);\r\n\r\nuseEffect( () =>{\r\n  handleIsDirtyFeatureItem()\r\n},[originalFeatureItems]);\r\n\r\n\r\n\r\nconst handleIsDirtyFeatureItem = () =>{\r\n  let isDirtTemplate = !_.isEqual(featureItems, originalFeatureItems);\r\n\r\n setIsDirtyFeatureItems(isDirtTemplate);\r\n}\r\n\r\n   const loadItems = async() => {\r\n    let items = await itemSrv.getItems();\r\n          let is = items?.map((item) => {\r\n            return {...item, isAvailable: true, label: item.Code}\r\n          })\r\n                      setItems(is?? []);\r\n  }\r\n\r\n   const getOptions = (items) => {\r\n    let is = _.cloneDeep(items);\r\n      return is\r\n        .map((i) => {\r\n          return {label: i.label, isAvailable: i.isAvailable, value:i.Id}\r\n    })\r\n  }\r\n  \r\n\r\n  const onItemChange = (selectedValues) => {\r\n        let cItems = [...featureItems];\r\n        let cItemIds = cItems.map(x => x.ItemId);\r\n\r\n        let deletedItems = _.difference(cItemIds,selectedValues);\r\n        cItems = cItems.filter(x=>!deletedItems.includes(x.ItemId) )\r\n\r\n        let addedItems = _.difference(selectedValues,cItemIds);\r\n        addedItems.map((id)=>{\r\n         return cItems.push(featureSrv.getNewFeatureItem(featureId, id));\r\n        })\r\n        setFeatureItems(cItems);\r\n        onChange && onChange(cItems);\r\n  };\r\n\r\n  const SaveItems = async() => {\r\n    console.log(featureItems)\r\n           let items = null;\r\n           if(onChange) {\r\n            items = featureItems;\r\n           }else{\r\n            items = await featureSrv.SaveItems({\r\n              featureId : featureId,\r\n              Items : featureItems\r\n             }).Items;\r\n           }\r\n\r\n           setFeatureItems(items);\r\n           setOriginalFeatureItems(items);\r\n           onChange && onChange(items);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Feature Item</h1>\r\n        <Versions>\r\n          <div>\r\n        {!onChange && isDirtyFeatureItems && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    SaveItems();\r\n                  }}\r\n                  >\r\n                  Save\r\n              </AwesomeButton>\r\n              }\r\n              </div>\r\n              <ListDragAndDrop \r\n              options = {options} \r\n              selected = {featureItems?.map(x=>x.ItemId)} \r\n              onChange = {onItemChange}/>\r\n\r\n        </Versions>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default  FeatureItemDetail;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateFeature, saveFeature } from \"../Store/Feature/feature\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Select from 'react-select'\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\nimport { ClinicalCategoryService } from \"../Service/ClinicalCategory\";\r\nimport FeatureItemDetail from './FeatureItemDetail';\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const SuiteStyle = styled.div`\r\n    background: blue;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\nexport const SuiteDetailStyle = styled.div`\r\n    background: blue;\r\n    display: flex;\r\n    height: 200px;\r\n    flex-direction: column;\r\n\r\n    .row1 {\r\n      display: flex;\r\n    }\r\n\r\n    .row2 {\r\n      display: flex;\r\n      justify-content: space-between;\r\n    }\r\n`\r\n\r\nexport const VersionsStyle = styled.div`\r\n    background: yellow;\r\n    max-height:100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: orange;\r\n    max-height:100%;\r\n    width: 300px;\r\n \r\n`\r\n\r\nconst Suite = ({children}) => {\r\n    return (<SuiteStyle>{children}</SuiteStyle> );\r\n}\r\n\r\nconst SuiteDetail = ({children}) => {\r\n  return (<SuiteDetailStyle>{children}</SuiteDetailStyle> );\r\n}\r\n\r\nconst Versions = ({children}) => {\r\n  return (<VersionsStyle>{children}</VersionsStyle> );\r\n}\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst FeatureEdit = ({selected, originalSelected, onChange, onSave}) => {\r\n  const featureSrv = new FeatureService();\r\n  const clinicalCategorySrv = new ClinicalCategoryService();\r\n\r\n  //const feature = useSelector(state => state.entities.feature);\r\n  //const originalFeature = useSelector(state => state.entities.originalFeature);\r\n  const [feature, setFeature] = useState(null);\r\n  const [groups, setGroups] = useState([]);\r\n   const [types, setTypes] = useState([]);\r\n  const [clincalCategories, setClincalCategories] = useState([]);\r\n  //const [isDirtyFeature, setIsDirtyFeature] = useState(false);\r\n\r\n  useEffect( () => {\r\n    loadClinicalCategories();\r\n    loadGroups();\r\n    loadTypes();\r\n   }, []);\r\n\r\n   useEffect( () => {\r\n    selected && setFeature(selected);\r\n }, [selected]);\r\n\r\n  //  useEffect( () => {\r\n  //   if (selected){\r\n  //     setFeature(selected);\r\n  //     setOriginalFeature(selected);\r\n  //   }\r\n  //  }, [selected]);\r\n\r\nuseEffect( () =>{\r\n // handleIsDirtyFeature()\r\n feature && onChange && onChange(feature);\r\n},[feature]);\r\n\r\n\r\n// useEffect( () =>{\r\n//   handleIsDirtyFeature()\r\n// },[originalFeature]);\r\n\r\n\r\n// const handleIsDirtyFeature = () =>{\r\n//   let isDirtTemplate = !_.isEqual(feature, originalFeature);\r\n\r\n//  setIsDirtyFeature(isDirtTemplate);\r\n// }\r\n\r\n  const loadClinicalCategories = async() => {\r\n    let cCs = await clinicalCategorySrv.getClinicalCategories();\r\n     \r\n    setClincalCategories(cCs);\r\n  }\r\n\r\n  const loadGroups = async() => {\r\n    let cCs = await featureSrv.getGroups();\r\n     \r\n    setGroups(cCs);\r\n  }\r\n\r\n  const loadTypes = async() => {\r\n    let cCs = await featureSrv.getTypes();\r\n     \r\n    setTypes(cCs);\r\n  }\r\n\r\n  const setFeid = ({target}) => {\r\n    setFeature({...feature, [target.name]: target.value});\r\n  };\r\n\r\n  //  const updateDescription = (value) => {\r\n  //   setTimeout(function() {\r\n  //     let f = {...feature, Description : value}\r\n  //     dispatch(updateFeature(f));\r\n  //  }, 2000);\r\n  //  }\r\n\r\n  //  const updateName = (value) => {\r\n  //   setTimeout(function() {\r\n  //   let f = {...feature, Name : value}\r\n  //   dispatch(updateFeature(f));\r\n  // }, 2000);\r\n  // }\r\n\r\n  const updateClinicalCategory = (value) => {\r\n    // let f = {...feature, ClinicalCategoryId : value.Id}\r\n    // dispatch(updateFeature(f));\r\n    setFeature({...feature, ClinicalCategoryId : value.Id});\r\n  }\r\n\r\n  const updateGroup = (value) => {\r\n    setFeature({...feature, GroupId : value.Id});\r\n  }\r\n\r\n  const updateType = (value) => {\r\n    setFeature({...feature, TypeId : value.Id});\r\n  }\r\n\r\n\r\n  const Save = async() => {\r\n    // let f = await onSave(feature);\r\n \r\n    // setFeature(f);\r\n    // setOriginalFeature(f);\r\n   // dispatch(saveFeature(feature));\r\n   onSave && await onSave(feature)\r\n    }\r\n\r\n  const onItemChange = (items) => {\r\n    console.log(items)\r\n           let f = _.cloneDeep(feature);\r\n           f.Items = items\r\n           setFeature(f);\r\n         //  dispatch(updateFeature(f));\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Feature Edit</h1>\r\n        <Suite>\r\n          <h1>CFeature - {feature?.Name}</h1>\r\n         <SuiteDetail>\r\n           <div className=\"row1\">\r\n         <InputBlock>\r\n              <span>Name</span>\r\n              <input\r\n                type=\"text\"\r\n                value={feature?.Name}\r\n                name= \"Name\"\r\n                onChange={setFeid}\r\n              />\r\n            </InputBlock>\r\n          <InputBlock>\r\n              <span>Description</span>\r\n              <input\r\n                type=\"text\"\r\n                value={feature?.Description}\r\n                name =\"Description\"\r\n                onChange={setFeid}\r\n              />\r\n            </InputBlock>\r\n            </div>\r\n            <div className=\"row2\">\r\n            <InputBlock>\r\n              <span>Clinical Category {feature?.ClinicalCategoryId}</span>\r\n              <Select    \r\n                options={clincalCategories}\r\n                value={clincalCategories?.find(x => x.Id === feature?.ClinicalCategoryId)?? []}\r\n                getOptionLabel={ x => x.Code + ' - ' +  x.Name}\r\n                getOptionValue={ x => x.Id}\r\n                onChange={e => updateClinicalCategory(e)}\r\n                />\r\n            </InputBlock>\r\n            <InputBlock>\r\n              <span>Type{feature?.TypeId}</span>\r\n              <Select    \r\n                options={types}\r\n                value={types?.find(x => x.Id === feature?.TypeId)?? []}\r\n                getOptionLabel={ x => x.Name}\r\n                getOptionValue={ x => x.Id}\r\n                onChange={e => updateType(e)}\r\n                />\r\n            </InputBlock>\r\n            <InputBlock>\r\n              <span>Group{feature?.GroupId}</span>\r\n              <Select    \r\n                options={groups}\r\n                value={groups?.find(x => x.Id === feature?.GroupId)?? []}\r\n                getOptionLabel={ x => x.Name}\r\n                getOptionValue={ x => x.Id}\r\n                onChange={e => updateGroup(e)}\r\n                />\r\n            </InputBlock>\r\n            </div>\r\n         </SuiteDetail>\r\n         { onSave && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    Save();\r\n                  }}\r\n                  >\r\n                  {feature?.Id > 0 ? \"Save\" : \"Create\"}\r\n              </AwesomeButton>\r\n              }\r\n        </Suite>\r\n        <Versions>\r\n        <FeatureItemDetail selected = {feature} onChange = {onItemChange}/>\r\n        </Versions>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FeatureEdit;\r\n\r\n","import axios from 'axios'\r\n\r\nlet api = '/api/WorkFlowItem/';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE_URL,\r\n});\r\nexport default {\r\n    getDataList: () =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api\r\n    }),\r\n    getData: (id) =>\r\n    instance({\r\n        'method':'GET',\r\n        'url': api + id\r\n    }),\r\n    postData: (data) =>\r\n    instance({\r\n        'method': 'POST',\r\n        'url': api,\r\n        'data':data\r\n    }),\r\n    removeData: (data) =>\r\n    instance({\r\n        'method': 'DELETE',\r\n        'url': api,\r\n        'data':data\r\n    })\r\n}","import wFItem from \"../data/WorkFlowItem\";\r\n\r\nexport const  getItems = async() => {\r\n    try {\r\n      let response = await wFItem.getDataList();\r\n      return response.data;\r\n    } catch(err) {\r\n            if (err.response) {\r\n               // setError(\"Failure \"+ err.response.status);\r\n            } else if (err.request) {\r\n               // setError(\"client never received a response, or request never left\");\r\n            } else {\r\n              // anything else\r\n            }\r\n    }\r\n}\r\n\r\nexport const getItem = async(id) => {\r\n  try {\r\n      let response = await wFItem.getData(id);\r\n      return response.data;\r\n    } catch(err) {\r\n            if (err.response) {\r\n               // setError(\"Failure \"+ err.response.status);\r\n            } else if (err.request) {\r\n               // setError(\"client never received a response, or request never left\");\r\n            } else {\r\n              // anything else\r\n            }\r\n    }\r\n}\r\n\r\nexport const getNewItem = () => {\r\n    return {\r\n        Id: 0\r\n    };\r\n}\r\n\r\n\r\nexport const SaveItem = async (cc) => {\r\n    try {\r\n        let response = await wFItem.postData(cc);\r\n        return response.data;\r\n      } catch(err) {\r\n          console.log(err);\r\n              if (err.response) {\r\n                 // setError(\"Failure \"+ err.response.status);\r\n              } else if (err.request) {\r\n                 // setError(\"client never received a response, or request never left\");\r\n              } else {\r\n                // anything else\r\n              }\r\n      }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useParams } from 'react-router-dom';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport _ from 'lodash'; \r\nimport ProductEdit from \"./productEdit\";\r\nimport versionDetail from \"./VersionDetail\";\r\nimport FeatureEdit from \"./featureEdit\";\r\nimport * as workFlowSrv from \"../Service/WorkFlowService\";\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const WorkFlow = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const WorkFlowAction = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n`\r\nconst WorkFlowDetail = () => {\r\n    const [workFlowItem, setWorkFlowItem] = useState(null);\r\n    const [originalWorkFlowItem, setOriginalWorkFlowItem] = useState(null);\r\n    const [isDirtyWorkFlowItem, setIsDirtworkFlowItem] = useState(false);\r\n    const [isDirtyObject, setIsDirtyObject] = useState(false);\r\n    const [isApproved, setIsApproved] = useState(false);\r\n\r\n    const { Id } = useParams();\r\n\r\n    const Components = {\r\n        \"ProductSuiteDto\" : ProductEdit ,\r\n        \"ProductVersionDto\" : versionDetail,\r\n        \"FeatureDto\" : FeatureEdit\r\n      };\r\n\r\n    useEffect( () => {\r\n        LoadWorkFlowItem()\r\n       }, []);\r\n\r\n       useEffect( () => {\r\n        workFlowItem && setIsApproved(workFlowItem.ApprovalStatus === 4 ? true : false);\r\n        handleIsDirtyWFI()\r\n       }, [workFlowItem]);\r\n\r\n       useEffect( () => {\r\n        handleIsDirtyWFI()\r\n       }, [originalWorkFlowItem]);\r\n\r\n       const handleIsDirtyWFI = () =>{\r\n        let isDirtworkFlowItem = !_.isEqual(workFlowItem, originalWorkFlowItem);\r\n        let isDirtObject = !_.isEqual(workFlowItem?.Obj, originalWorkFlowItem?.Obj);\r\n      \r\n        setIsDirtworkFlowItem(isDirtworkFlowItem);\r\n        setIsDirtyObject(isDirtObject);\r\n      }\r\n\r\n    const LoadWorkFlowItem = async() => {\r\n        let wFI = await workFlowSrv.getItem(Id);\r\n\r\n        console.log(wFI);\r\n        console.log(wFI.Type);\r\n        setWorkFlowItem(wFI);\r\n        setOriginalWorkFlowItem(wFI);\r\n       }\r\n\r\n       const onObjSave = async(suite) => {\r\n           let wFI = _.cloneDeep(workFlowItem);\r\n           wFI.Obj = suite;\r\n\r\n      //  let i = await workFlowSrv.SaveItem(wFI);\r\n        setWorkFlowItem(wFI);\r\n        //setOriginalWorkFlowItem(wFI);\r\n        console.log(wFI);\r\n       }\r\n\r\n       const updateStatus = (status) => {\r\n        let wFI = _.cloneDeep(workFlowItem);\r\n        wFI.ApprovalStatus = status;\r\n\r\n   //  let i = await workFlowSrv.SaveItem(wFI);\r\n     setWorkFlowItem(wFI);\r\n    // setOriginalWorkFlowItem(wFI);\r\n     console.log(wFI);\r\n       }\r\n\r\n       const Amend = async() => {\r\n        let wFI = await workFlowSrv.SaveItem(workFlowItem);\r\n        setWorkFlowItem(wFI);\r\n        setOriginalWorkFlowItem(wFI);\r\n        console.log(wFI);\r\n       }\r\n\r\n       const Save = async() => {\r\n        let wFI = await workFlowSrv.SaveItem(workFlowItem);\r\n        setWorkFlowItem(wFI);\r\n        setOriginalWorkFlowItem(wFI);\r\n        console.log(wFI);\r\n       }\r\n\r\n       const ComponentForObject = workFlowItem && Components[workFlowItem.Type];\r\n\r\n    return (\r\n        <React.Fragment> \r\n          <Container>\r\n              \r\n              <WorkFlow>\r\n    <h1>WorkFlow - {workFlowItem?.Id} - {workFlowItem?.ApprovalStatus}</h1>\r\n                <WorkFlowAction>\r\n                {!isDirtyObject && !isApproved && \r\n                <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    updateStatus(\"Approved\");\r\n                  }}\r\n                  >\r\n                  Approved\r\n                </AwesomeButton>}\r\n                {!isDirtyObject && !isApproved && \r\n                <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                      updateStatus(\"Rejected\");\r\n                    }}\r\n                    >\r\n                    Rejected\r\n                  </AwesomeButton>}\r\n                {isDirtyObject && !isApproved && \r\n                <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    Amend();\r\n                  }}\r\n                  >\r\n                  Amend\r\n                </AwesomeButton>}\r\n                {!isDirtyObject && isDirtyWorkFlowItem && !isApproved &&\r\n                <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                    Save();\r\n                    }}\r\n                    >\r\n                    Save\r\n                </AwesomeButton>}\r\n                </WorkFlowAction>\r\n              </WorkFlow>\r\n              {workFlowItem && \r\n                <ComponentForObject selected = {workFlowItem.Obj} onSave = {onObjSave}/>}  \r\n              </Container>\r\n              </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default WorkFlowDetail;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport _ from 'lodash'; \r\n\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { ProductService } from \"../Service/ProductService\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst ProductCategoryDetail = ({selectedCategory, onSave}) => {\r\n  const productSrv = new ProductService();\r\n\r\n  const [category, setCategory] = useState(selectedCategory ?? productSrv.getNewCategory());\r\n\r\n  useEffect( () => {\r\n    selectedCategory && setCategory(selectedCategory);\r\n   },[selectedCategory]);\r\n\r\n   const SaveCategory =  async() => {\r\n    console.log(category)\r\n    let Id = await productSrv.SaveCategory(category);\r\n    console.log(Id);\r\n    if (Id && Id > 0) {\r\n        let i = {...category, Id};\r\n        setCategory(i);\r\n        onSave(i);\r\n    }\r\n  }\r\n\r\n  const updateName = (e) => {\r\n    setCategory({...category, Name:e});\r\n    console.log(e);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Product Category Edit</h1>\r\n        <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    SaveCategory();\r\n                  }}\r\n                  >\r\n                  {category.Id > 0 ? \"Save\" : \"Create\"}\r\n        </AwesomeButton>\r\n        <div className = \"header\">\r\n          \r\n        </div>\r\n        <div className = \"mid\">\r\n          <InputBlock>\r\n              <span>Name</span>\r\n              <input\r\n                type=\"text\"\r\n                value={category.Name}\r\n                onChange={e => updateName(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n         \r\n            \r\n         </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductCategoryDetail;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nimport { ProductService } from \"../Service/ProductService\";\r\nimport icons from 'glyphicons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ProductCategoryDetail from \"./ProductCategoryDetail\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Modal from \"./Model\";\r\n\r\nexport const ListStyle = styled.div`\r\n\r\n`\r\nconst ProductCategoryList = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const productSrv = new ProductService();\r\n  useEffect( () => {\r\n   load()\r\n  }, []);\r\n\r\nconst load = async() => {\r\n let items = await productSrv.getProductCategories()\r\n console.log(items);\r\n setCategories(items);\r\n}\r\n\r\nconst modalRefCloneCategory = React.useRef();\r\n\r\nconst openModalCloneCategory = () => {\r\n  modalRefCloneCategory.current && modalRefCloneCategory.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalCloneCategory = () => {\r\n  modalRefCloneCategory.current && modalRefCloneCategory.current.close()\r\n};\r\n\r\nconst modalRefNewCategory = React.useRef();\r\n\r\nconst openModalNewCategory = () => {\r\n  modalRefNewCategory.current && modalRefNewCategory.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalNewCategory = () => {\r\n  modalRefNewCategory.current && modalRefNewCategory.current.close()\r\n};\r\n\r\nconst COLUMN_WIDTH = 200;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Name\",\r\n    name: \"Name\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 40\r\n  }\r\n];\r\n\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Action:  [\r\n      {\r\n        icon: <span><button>{icons.arrowE}</button></span>,\r\n        callback: () => {\r\n          setSelectedCategory(categories.find( ({ Id }) => Id === row.Id));\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n   \r\n\r\n  const onCategorySave = (category) => {\r\n     let i = [...categories];\r\n    let index = i.findIndex( ({ Id }) => Id === category.Id);\r\n    if (index > -1){\r\n      i[index] = category;\r\n    }else\r\n    {\r\n      i.push(category);\r\n    }\r\n    setCategories(i);\r\n    closeModalNewCategory();\r\n    closeModalCloneCategory();\r\n   }\r\n  return (\r\n    <React.Fragment> \r\n        <ListStyle>\r\n            <h1>Product Category List</h1>\r\n          \r\n            <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalNewCategory();\r\n                  }}\r\n                  >\r\n                  New\r\n              </AwesomeButton>\r\n              <Modal ref={modalRefNewCategory}>\r\n                    <h1>Create New</h1>\r\n                    <ProductCategoryDetail onSave = {onCategorySave}/>\r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalNewCategory();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal> \r\n                {selectedCategory && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalCloneCategory();\r\n                  }}\r\n                  >\r\n                  Clone\r\n              </AwesomeButton>\r\n}\r\n{selectedCategory && \r\n              <Modal ref={modalRefCloneCategory}>\r\n                    <h1>Create Clone</h1>\r\n                    <ProductCategoryDetail selectedCategory = {{...selectedCategory, Id : 0}} onSave = {onCategorySave}/> \r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalCloneCategory();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>\r\n              }\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => categories[i]}\r\n                rowsCount={categories.length}\r\n                minHeight={500}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ListStyle>\r\n        {selectedCategory && <ProductCategoryDetail selectedCategory = {selectedCategory} onSave = {onCategorySave}/>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductCategoryList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport ListDragAndDrop from './dnd/ListDragAndDrop';\r\n\r\nimport _ from 'lodash'; \r\n\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { ProductService } from \"../Service/ProductService\";\r\nimport { ItemService } from \"../Service/ItemService\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst ProductCodeDetail = ({mode, selectedCode, onSave}) => {\r\n  const productSrv = new ProductService();\r\n  const itemSrv = new ItemService();\r\n  const [code, setCode] = useState(selectedCode ?? productSrv.getNewCode());\r\n  const [ancillaries, setAncillaries] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  useEffect( () => {\r\n    selectedCode && loadCode(selectedCode.Id);\r\n   },[selectedCode]);\r\n\r\n   useEffect( () => {\r\n    loadItems();\r\n   }, []);\r\n\r\n   useEffect( () =>{\r\n    setOptions(getOptions(items));\r\n},[items]);\r\n\r\nuseEffect( () =>{\r\n    let c = _.cloneDeep(code);\r\n    c.Ancillaries = ancillaries;\r\n    setCode(c);\r\n},[ancillaries]);\r\n\r\nconst loadCode = async(id) => {\r\n    let codes = await productSrv.getProductCodeWithDependents(id);\r\n    if (mode === 'Clone')\r\n      setCode({...codes[0], Id:0});\r\n    else\r\n      setCode(codes[0]);\r\n}\r\n\r\nconst loadItems = async() => {\r\n    let items = await itemSrv.getItems();\r\n          let is = items.map((item) => {\r\n            return {...item, isAvailable: true, label: item.Code}\r\n          })\r\n                      setItems(is);\r\n        //  setOptions(getOptions(is));\r\n  }\r\n\r\n  const getOptions = (items) => {\r\n    let is = _.cloneDeep(items);\r\n      return is\r\n        .map((i) => {\r\n          return {label: i.label, isAvailable: i.isAvailable, value:i.Id}\r\n    })\r\n  }\r\n\r\n   const SaveCode =  async() => {\r\n    console.log(code)\r\n \r\n    let c = await productSrv.SaveCodeWithDependent(code);\r\n    console.log(c);\r\n    if (c && c.Id > 0) {\r\n        let i = {...code, Id:c.Id};\r\n        setCode(i);\r\n        onSave &&  onSave(i);\r\n    }\r\n  }\r\n\r\n  const updateName = (e) => {\r\n    setCode({...code, Code:e});\r\n    console.log(e);\r\n  }\r\n\r\n  const onChange = (selectedValues) => {\r\n    let cItems = [...ancillaries];\r\n    let cItemIds = cItems.map(x => x.ItemId);\r\n\r\n    let deletedItems = _.difference(cItemIds,selectedValues);\r\n    cItems = cItems.filter(x=>!deletedItems.includes(x.ItemId) )\r\n\r\n    let addedItems = _.difference(selectedValues,cItemIds);\r\n    addedItems.map((id)=>{\r\n     return cItems.push(\r\n      {\r\n        Id: 0, \r\n        ProductCodeId: code.Id,\r\n        ItemId: id\r\n      });\r\n    })\r\n    setAncillaries(cItems);\r\n};\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Code Edit</h1>\r\n        <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    SaveCode();\r\n                  }}\r\n                  >\r\n                  {code.Id > 0 ? \"Save\" : \"Create\"}\r\n        </AwesomeButton>\r\n        <div className = \"header\">\r\n          \r\n        </div>\r\n        <div className = \"mid\">\r\n          <InputBlock>\r\n              <span>Code</span>\r\n              <input\r\n                type=\"text\"\r\n                value={code.Code}\r\n                onChange={e => updateName(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n         \r\n            \r\n         </div>\r\n         <div>\r\n         <ListDragAndDrop \r\n              options = {options} \r\n              selected = {code.Ancillaries?.map(x=>x.ItemId)} \r\n              onChange = {onChange}/>\r\n         </div>\r\n\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductCodeDetail;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nimport { ProductService } from \"../Service/ProductService\";\r\nimport icons from 'glyphicons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ProductCodeDetail from \"./ProductCodeDetail\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Modal from \"./Model\";\r\n\r\nexport const ListStyle = styled.div`\r\n\r\n`\r\nconst ProductCodeList = () => {\r\n  const [codes, setCodes] = useState([]);\r\n  const [selectedCode, setSelectedCode] = useState(null);\r\n  const productSrv = new ProductService();\r\n  useEffect( () => {\r\n   load()\r\n  }, []);\r\n\r\nconst load = async() => {\r\n let items = await productSrv.getProductCodes()\r\n console.log(items);\r\n setCodes(items);\r\n}\r\n\r\nconst modalRefCloneCode = React.useRef();\r\n\r\nconst openModalCloneCode = () => {\r\n  modalRefCloneCode.current && modalRefCloneCode.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalCloneCode = () => {\r\n  modalRefCloneCode.current && modalRefCloneCode.current.close()\r\n};\r\n\r\nconst modalRefNewCode = React.useRef();\r\n\r\nconst openModalNewCode = () => {\r\n  modalRefNewCode.current && modalRefNewCode.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalNewCode = () => {\r\n  modalRefNewCode.current && modalRefNewCode.current.close()\r\n};\r\n\r\nconst COLUMN_WIDTH = 200;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Code\",\r\n    name: \"Code\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 40\r\n  }\r\n];\r\n\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Action:  [\r\n      {\r\n        icon: <span><button>{icons.arrowE}</button></span>,\r\n        callback: () => {\r\n          setSelectedCode(codes.find( ({ Id }) => Id === row.Id));\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n   \r\n\r\n  const onCodeSave = (code) => {\r\n     let i = [...codes];\r\n    let index = i.findIndex( ({ Id }) => Id === code.Id);\r\n    if (index > -1){\r\n      i[index] = code;\r\n    }else\r\n    {\r\n      i.push(code);\r\n    }\r\n    setCodes(i);\r\n    closeModalNewCode();\r\n    closeModalCloneCode();\r\n   }\r\n  return (\r\n    <React.Fragment> \r\n        <ListStyle>\r\n            <h1>Product code List</h1>\r\n          \r\n            <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalNewCode();\r\n                  }}\r\n                  >\r\n                  New\r\n              </AwesomeButton>\r\n              <Modal ref={modalRefNewCode}>\r\n                    <h1>Create New Item</h1>\r\n                    <ProductCodeDetail mode = \"New\" onSave = {onCodeSave}/>\r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalNewCode();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal> \r\n                {selectedCode && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalCloneCode();\r\n                  }}\r\n                  >\r\n                  Clone\r\n              </AwesomeButton>\r\n}\r\n{selectedCode && \r\n              <Modal ref={modalRefCloneCode}>\r\n                    <h1>Create Clone Item</h1>\r\n                    <ProductCodeDetail  mode = \"Clone\" selectedCode = {{...selectedCode}} onSave = {onCodeSave}/> \r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalCloneCode();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>\r\n              }\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => codes[i]}\r\n                rowsCount={codes.length}\r\n                minHeight={500}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ListStyle>\r\n        {selectedCode && <ProductCodeDetail selectedCode = {selectedCode} onSave = {onCodeSave}/>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductCodeList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\nimport icons from 'glyphicons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const ListStyle = styled.div`\r\n\r\n`\r\n\r\nconst COLUMN_WIDTH = 440;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Name\",\r\n    name: \"Name\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 80\r\n  }\r\n];\r\n\r\n\r\n\r\nconst ClinicalCategotyList = () => {\r\n\r\n  function getCellActions(column, row) {\r\n    const cellActions = {\r\n      Action:  [\r\n        {\r\n          icon: <span><button>{icons.cross}</button></span>,\r\n          callback: () => {\r\n            removeSelectedFeature(row.Id);\r\n          }\r\n        },\r\n        {\r\n          icon: <span> <Link className=\"link\" to={\"/featureEdit/\" + row.Id}><button>{icons.arrowE}</button></Link></span>//,\r\n          // callback: () => {\r\n          //   alert(\"Deleting \" + row.Id);\r\n          // }\r\n        }\r\n      ]\r\n    };\r\n    return cellActions[column.key];\r\n  }\r\n  const featureSrv =  new FeatureService();\r\n   // const errorString = useSelector(state =>state.errorString);\r\n   const [features, setFeatures] = useState([]);\r\n \r\n   useEffect( () => {\r\n    loadSuites()\r\n   }, []);\r\n\r\nconst loadSuites = async() => {\r\n  let features = await featureSrv.getFeatures()\r\n  console.log(features);\r\n  setFeatures(features);\r\n}\r\n   \r\nconst removeSelectedFeature = async(id) => {\r\n  let i = [...features];\r\n  let index = i.findIndex( ({ Id }) => Id === id);\r\n  if (index > -1) {\r\n    await featureSrv.DeleteFeature(id);\r\n    i.splice(index,1);\r\n    setFeatures(i);\r\n  }\r\n}\r\n\r\n  return (\r\n    <React.Fragment> \r\n        <ListStyle>\r\n            <h1>Feature List</h1>\r\n             <Link className=\"link\" to=\"/featureEdit/new\">\r\n                    <h3>New</h3>\r\n                </Link>\r\n            <Link className=\"link\" to=\"/featureGrouplist\">\r\n                    <h3>Group</h3>\r\n                </Link>\r\n                <Link className=\"link\" to=\"/featureTypelist\">\r\n                    <h3>Type</h3>\r\n                </Link>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => features[i]}\r\n                rowsCount={features.length}\r\n                minHeight={500}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ListStyle>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicalCategotyList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadFeature, updateFeature, saveFeature } from \"../Store/Feature/feature\";\r\nimport styled from 'styled-components';\r\n\r\nimport FeatureEdit from \"./featureEdit\";\r\nimport  { FeatureService } from \"../Service/FeatureService\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport _ from 'lodash'; \r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst FeatureEditContainer = () => {\r\n   // const [suite, setSuite] = useState(ProductSrv.getNewSuite());\r\n     const feature = useSelector(state => state.entities.feature);\r\n     const originalFeature = useSelector(state => state.entities.originalFeature);\r\n     const [isDirtyFeature, setIsDirtyFeature] = useState(false);\r\n\r\n     const dispatch = useDispatch();\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const { Id } = useParams();\r\n    \r\n    const featureSrv = new FeatureService();\r\n\r\n  useEffect( () => {\r\n    LoadSuite()\r\n   }, []);\r\n\r\n   useEffect( () => {\r\n    if (feature && location.pathname.indexOf(\"/new\") > -1 && feature.Id > 0){\r\n      let newLocation = location.pathname.replace(\"/new\", \"/\" + feature.Id );\r\n           history.push(newLocation);\r\n     }\r\n        handleIsDirtyFeature()\r\n    },[feature]);\r\n    \r\n    \r\n    useEffect( () =>{\r\n        handleIsDirtyFeature()\r\n    },[originalFeature]);\r\n    \r\n    \r\n    const handleIsDirtyFeature = () =>{\r\n        let isDirtTemplate = !_.isEqual(feature, originalFeature);\r\n        \r\n        setIsDirtyFeature(isDirtTemplate);\r\n    }\r\n\r\n   const LoadSuite = async() => {\r\n\r\n      let suite = {};\r\n      if (Id === \"new\"){\r\n        suite = featureSrv.getNewFeature();\r\n      }else{\r\n       // suite = await productSrv.getSuiteWithVersions(Id);\r\n       suite = dispatch(loadFeature(Id));\r\n      }\r\n      console.log(suite);\r\n     // dispatch(updateSuite(suite));\r\n\r\n   }\r\n\r\n   const Change = (f) => {\r\n    (!_.isEqual(feature, f)) && dispatch(updateFeature(f));\r\n   }\r\n\r\n   const Save = async(f) => {\r\n     console.log(f)\r\n  //   let f = {};\r\n  //     if (feature.Id === 0){\r\n  //       //s = await productSrv.SaveSuiteWithDependents(suite);\r\n  //       dispatch(saveFeature(feature));\r\n  //       let newLocation = location.pathname.replace(\"/new\", \"/\" + f.Id );\r\n  //       history.push(newLocation);\r\n  //     }else{\r\n  //      // s = await productSrv.SaveSuiteWithDependents({...suite, versions: []});\r\n        dispatch(saveFeature(f));\r\n  //     }\r\n  //  // console.log(s);\r\n  //  // dispatch(updateSuite(s));\r\n   return f;\r\n   }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n       <FeatureEdit \r\n        selected = {feature} \r\n        originalSelected = {originalFeature} \r\n        onChange = {Change}\r\n        onSave = {isDirtyFeature && Save}/>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FeatureEditContainer;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport _ from 'lodash'; \r\n\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst FeatureGroupDetail = ({selectedCategory, onSave}) => {\r\n  const featureSrv = new FeatureService();\r\n  const [group, setGroup] = useState(selectedCategory ?? featureSrv.getNewGroup());\r\n\r\n  useEffect( () => {\r\n    selectedCategory && setGroup(selectedCategory);\r\n   },[selectedCategory]);\r\n\r\n   const SaveCategory =  async() => {\r\n    console.log(group)\r\n    let Id = await featureSrv.SaveGroup(group);\r\n    console.log(Id);\r\n    if (Id && Id > 0) {\r\n        let i = {...group, Id};\r\n        setGroup(i);\r\n        onSave(i);\r\n    }\r\n  }\r\n\r\n  const updateName = (e) => {\r\n    setGroup({...group, Name:e});\r\n    console.log(e);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Item Edit</h1>\r\n        <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    SaveCategory();\r\n                  }}\r\n                  >\r\n                  {group.Id > 0 ? \"Save\" : \"Create\"}\r\n        </AwesomeButton>\r\n        <div className = \"header\">\r\n          \r\n        </div>\r\n        <div className = \"mid\">\r\n          <InputBlock>\r\n              <span>Code</span>\r\n              <input\r\n                type=\"text\"\r\n                value={group.Name}\r\n                onChange={e => updateName(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n         \r\n            \r\n         </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FeatureGroupDetail;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\nimport icons from 'glyphicons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport FeatureGroupDetail from \"./FeatureGroupDetail\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Modal from \"./Model\";\r\n\r\nexport const ListStyle = styled.div`\r\n\r\n`\r\nconst FeatureGroupList = () => {\r\n  const featureSrv = new FeatureService();\r\n  const [groups, setGroups] = useState([]);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n\r\n  useEffect( () => {\r\n   load()\r\n  }, []);\r\n\r\nconst load = async() => {\r\n let items = await featureSrv.getGroups()\r\n console.log(items);\r\n setGroups(items);\r\n}\r\n\r\nconst modalRefCloneCategory = React.useRef();\r\n\r\nconst openModalCloneCategory = () => {\r\n    modalRefCloneCategory.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalCloneCategory = () => {\r\n  modalRefCloneCategory.current && modalRefCloneCategory.current.close()\r\n};\r\n\r\nconst modalRefNewCategory = React.useRef();\r\n\r\nconst openModalNewCategory = () => {\r\n    modalRefNewCategory.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalNewCategory = () => {\r\n  modalRefNewCategory.current && modalRefNewCategory.current.close()\r\n};\r\n\r\nconst COLUMN_WIDTH = 200;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Name\",\r\n    name: \"Name\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 80\r\n  }\r\n];\r\n\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Action:  [\r\n      {\r\n        icon: <span><button>{icons.cross}</button></span>,\r\n        callback: () => {\r\n            removeSelectedGroup(row.Id);\r\n        }\r\n      },\r\n      {\r\n        icon: <span><button>{icons.arrowE}</button></span>,\r\n        callback: () => {\r\n          setSelectedGroup(groups.find( ({ Id }) => Id === row.Id));\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n   \r\n\r\n  const onSave = (group) => {\r\n     let i = [...groups];\r\n    let index = i.findIndex( ({ Id }) => Id === group.Id);\r\n    if (index > -1){\r\n      i[index] = group;\r\n    }else\r\n    {\r\n      i.push(group);\r\n    }\r\n    setGroups(i);\r\n    closeModalNewCategory();\r\n    closeModalCloneCategory();\r\n   }\r\n\r\n   const removeSelectedGroup = async(id) => {\r\n    let i = [...groups];\r\n    let index = i.findIndex( ({ Id }) => Id === id);\r\n    if (index > -1) {\r\n      await featureSrv.DeleteGroup(id);\r\n      i.splice(index,1);\r\n      setGroups(i);\r\n    }\r\n   }\r\n  return (\r\n    <React.Fragment> \r\n        <ListStyle>\r\n            <h1>Feature Group List</h1>\r\n          \r\n            <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalNewCategory();\r\n                  }}\r\n                  >\r\n                  New\r\n              </AwesomeButton>\r\n              <Modal ref={modalRefNewCategory}>\r\n                    <h1>Create New Item</h1>\r\n                    <FeatureGroupDetail onSave = {onSave}/>\r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalNewCategory();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal> \r\n                {selectedGroup && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalCloneCategory();\r\n                  }}\r\n                  >\r\n                  Clone\r\n              </AwesomeButton>\r\n}\r\n{selectedGroup && \r\n              <Modal ref={modalRefCloneCategory}>\r\n                    <h1>Create Clone Item</h1>\r\n                    <FeatureGroupDetail selectedCategory = {{...selectedGroup, Id : 0}} onSave = {onSave}/> \r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalCloneCategory();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>\r\n              }\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => groups[i]}\r\n                rowsCount={groups.length}\r\n                minHeight={200}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ListStyle>\r\n        {selectedGroup && <FeatureGroupDetail selectedCategory = {selectedGroup} onSave = {onSave}/>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FeatureGroupList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport _ from 'lodash'; \r\n\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst FeatureTypeDetail = ({selectedType, onSave}) => {\r\n  const featureSrv = new FeatureService();\r\n  const [type, setType] = useState(selectedType ?? featureSrv.getNewType());\r\n\r\n  useEffect( () => {\r\n    selectedType && setType(selectedType);\r\n   },[selectedType]);\r\n\r\n   const Save =  async() => {\r\n    console.log(type)\r\n    let Id = await featureSrv.SaveType(type);\r\n    console.log(Id);\r\n    if (Id && Id > 0) {\r\n        let i = {...type, Id};\r\n        setType(i);\r\n        onSave(i);\r\n    }\r\n  }\r\n\r\n  const updateName = (e) => {\r\n    setType({...type, Name:e});\r\n    console.log(e);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Feature Type</h1>\r\n        <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    Save();\r\n                  }}\r\n                  >\r\n                  {type.Id > 0 ? \"Save\" : \"Create\"}\r\n        </AwesomeButton>\r\n        <div className = \"header\">\r\n          \r\n        </div>\r\n        <div className = \"mid\">\r\n          <InputBlock>\r\n              <span>Name</span>\r\n              <input\r\n                type=\"text\"\r\n                value={type.Name}\r\n                onChange={e => updateName(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n         \r\n            \r\n         </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FeatureTypeDetail;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\nimport icons from 'glyphicons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport FeatureTypeDetail from \"./FeatureTypeDetail\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Modal from \"./Model\";\r\n\r\nexport const ListStyle = styled.div`\r\n\r\n`\r\nconst FeatureTypeList = () => {\r\n  const featureSrv = new FeatureService();\r\n  const [types, setTypes] = useState([]);\r\n  const [selectedType, setSelectedType] = useState(null);\r\n\r\n  useEffect( () => {\r\n   load()\r\n  }, []);\r\n\r\nconst load = async() => {\r\n let items = await featureSrv.getTypes()\r\n console.log(items);\r\n setTypes(items);\r\n}\r\n\r\nconst modalRefCloneCategory = React.useRef();\r\n\r\nconst openModalCloneCategory = () => {\r\n    modalRefCloneCategory.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalCloneCategory = () => {\r\n    modalRefCloneCategory.current.close()\r\n};\r\n\r\nconst modalRefNewCategory = React.useRef();\r\n\r\nconst openModalNewCategory = () => {\r\n    modalRefNewCategory.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalNewCategory = () => {\r\n    modalRefNewCategory.current.close()\r\n};\r\n\r\nconst COLUMN_WIDTH = 200;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Name\",\r\n    name: \"Name\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 80\r\n  }\r\n];\r\n\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Action:  [\r\n      {\r\n        icon: <span><button>{icons.cross}</button></span>,\r\n        callback: () => {\r\n            removeSelectedType(row.Id);\r\n        }\r\n      },\r\n      {\r\n        icon: <span><button>{icons.arrowE}</button></span>,\r\n        callback: () => {\r\n            setSelectedType(types.find( ({ Id }) => Id === row.Id));\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n   \r\n\r\n  const onSave = (type) => {\r\n     let i = [...types];\r\n    let index = i.findIndex( ({ Id }) => Id === type.Id);\r\n    if (index > -1){\r\n      i[index] = type;\r\n    }else\r\n    {\r\n      i.push(type);\r\n    }\r\n    setTypes(i);\r\n    modalRefNewCategory.current && closeModalNewCategory();\r\n    modalRefCloneCategory.current && closeModalCloneCategory();\r\n   }\r\n\r\n   const removeSelectedType = async(id) => {\r\n    let i = [...types];\r\n    let index = i.findIndex( ({ Id }) => Id === id);\r\n    if (index > -1) {\r\n      await featureSrv.DeleteType(id);\r\n      i.splice(index,1);\r\n      setTypes(i);\r\n    }\r\n   }\r\n\r\n  return (\r\n    <React.Fragment> \r\n        <ListStyle>\r\n            <h1>Feature Type List</h1>\r\n          \r\n            <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalNewCategory();\r\n                  }}\r\n                  >\r\n                  New\r\n              </AwesomeButton>\r\n              <Modal ref={modalRefNewCategory}>\r\n                    <h1>Create New Item</h1>\r\n                    <FeatureTypeDetail onSave = {onSave}/>\r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalNewCategory();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal> \r\n                {selectedType && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalCloneCategory();\r\n                  }}\r\n                  >\r\n                  Clone\r\n              </AwesomeButton>\r\n}\r\n{selectedType && \r\n              <Modal ref={modalRefCloneCategory}>\r\n                    <h1>Create Clone Item</h1>\r\n                    <FeatureTypeDetail selectedType = {{...selectedType, Id : 0}} onSave = {onSave}/> \r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalCloneCategory();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>\r\n              }\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => types[i]}\r\n                rowsCount={types.length}\r\n                minHeight={200}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ListStyle>\r\n        {selectedType && <FeatureTypeDetail selectedType = {selectedType} onSave = {onSave}/>}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FeatureTypeList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nimport { ClinicalCategoryService } from \"../Service/ClinicalCategory\";\r\nimport icons from 'glyphicons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const ListStyle = styled.div`\r\n\r\n`\r\n\r\nconst COLUMN_WIDTH = 200;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Name\",\r\n    name: \"Name\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 80\r\n  }\r\n];\r\n\r\n\r\n\r\nconst ClinicalCategotyList = () => {\r\n  const clinicalCategorySrv = new ClinicalCategoryService();\r\n   const [clinicalCategories, setClinicalCategories] = useState([]);\r\n \r\n   useEffect( () => {\r\n    loadSuites()\r\n   }, []);\r\n\r\nconst loadSuites = async() => {\r\n  let ccs = await clinicalCategorySrv.getClinicalCategories()\r\n  console.log(ccs);\r\n  setClinicalCategories(ccs);\r\n}\r\n   \r\nconst removeSelectedClinicalCategory = async(id) => {\r\n  let i = [...clinicalCategories];\r\n  let index = i.findIndex( ({ Id }) => Id === id);\r\n  if (index > -1) {\r\n    await clinicalCategorySrv.DeleteClinicalCategory(id);\r\n    i.splice(index,1);\r\n    setClinicalCategories(i);\r\n  }\r\n}\r\n\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Action:  [\r\n      {\r\n        icon: <span><button>{icons.cross}</button></span>,\r\n        callback: () => {\r\n          removeSelectedClinicalCategory(row.Id);\r\n        }\r\n      },\r\n      {\r\n        icon: <span> <Link className=\"link\" to={\"/clinicalCategoryEdit/\" + row.Id}><button>{icons.arrowE}</button></Link></span>\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n  return (\r\n    <React.Fragment> \r\n        <ListStyle>\r\n            <h1>ClinicalCategotyList List</h1>\r\n            <Link className=\"link\" to=\"/clinicalCategoryEdit/new\">\r\n                    <h3>New</h3>\r\n                </Link>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => clinicalCategories[i]}\r\n                rowsCount={clinicalCategories.length}\r\n                minHeight={500}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ListStyle>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicalCategotyList;\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const serviceGetClinicalCategory = createAction(\"service/GetClinicalCategory\");\r\nexport const serviceSaveClinicalCategory = createAction(\"service/SaveClinicalCategory\");\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { serviceGetClinicalCategory, serviceSaveClinicalCategory } from './service';\r\nimport { ClinicalCategoryService } from '../../Service/ClinicalCategory';\r\n\r\nconst CCSrv = new ClinicalCategoryService();\r\n\r\nexport const clinicalCategoryReceived = createAction(\"cc/clinicalCategoryReceived\");\r\nexport const clinicalCategorySaved = createAction(\"cc/clinicalCategorySaved\");\r\n\r\nconst  clinicalCategorySlice = createSlice({\r\n    name: 'clinicalCategory',\r\n    initialState: CCSrv.getNewClinicalCategory(),\r\n    reducers: {\r\n      updateClinicalCategory(cc, action){\r\n        return action.payload;\r\n      },\r\n      updateClinicalItems(cc, action){\r\n        cc.ClinicalItems = action.payload\r\n      },  \r\n      updateFeatures(cc, action){\r\n        cc.Features = action.payload\r\n      },  \r\n      // updateName(template, action){\r\n      //   template.Name = action.payload\r\n      // }, \r\n      // updateVersion(suite, action){\r\n      //   suite.Layout.Version = action.payload\r\n      // }, \r\n      // updateLayout(template, action){\r\n      //   template.Layout = action.payload\r\n      // },  \r\n      // addItem(template, action) {\r\n      //   template.Layout.Setting.CellData\r\n      //   .push({ ...action.payload, Id : id++})\r\n      // },\r\n      // updateItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //       .findIndex(c => c.Id === action.payload.Id);\r\n      //   template.Layout.Setting.CellData[index] = action.payload;\r\n      // },\r\n      // updateItems(template, action) {\r\n      //   template.Layout.Setting.CellData = action.payload;\r\n      // },\r\n      // removeItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //   .findIndex(c => c.Id === action.payload);\r\n      //    template.Layout.Setting.CellData.splice(index,1)\r\n      // },\r\n    },\r\n  })\r\n  \r\n  export const {\r\n    updateClinicalCategory, updateClinicalItems, updateFeatures} = clinicalCategorySlice.actions\r\n  export default clinicalCategorySlice.reducer\r\n\r\n // Action Creators\r\n\r\n  export const loadClinicalCategory = (id) => serviceGetClinicalCategory({\r\n    data: id,\r\n    onSuccess: clinicalCategoryReceived.type\r\n  });\r\n\r\n  export const SaveClinicalCategory = (CC) => serviceSaveClinicalCategory({\r\n    data: CC,\r\n    onSuccess: clinicalCategorySaved.type\r\n  });\r\n\r\n\r\n\r\n  //createselector from reselect for cachng","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport _ from 'lodash'; \r\nimport Moment from 'react-moment';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Modal from \"./Model\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const VersionsStyle = styled.div`\r\n    background: yellow;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n    display: flex;\r\n`\r\n\r\nexport const VersionListStyle = styled.div`\r\n    background: yellow;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst Versions = ({children}) => {\r\n  return (<VersionsStyle>{children}</VersionsStyle> );\r\n}\r\n\r\nconst VersionList = ({children}) => {\r\n  return (<VersionListStyle>{children}</VersionListStyle> );\r\n}\r\n\r\nconst ClinicalCategoryVersions = ({selectedId, selectedItems, onSave, detailComponent}) => {\r\n\r\n  const [versions, setVersions] = useState([]);\r\n  const [version, setVersion] = useState(null);\r\n  const [newVersion, setNewVersion] = useState({});\r\n  const [cloneVersion, setCloneVersion] = useState({});\r\n\r\n  const modalRefNewClinicalItem = React.useRef();\r\n  const modalRefCloneClinicalItem = React.useRef();\r\n  \r\n     const openModalNewClinicalItem = () => {\r\n      getNewVersion();\r\n      modalRefNewClinicalItem.current.openModal()\r\n      //  GetAllTemplate();\r\n    };\r\n\r\n    const closeModalNewClinicalItem = () => {\r\n      modalRefNewClinicalItem.current.close()\r\n    };\r\n\r\n    const openModalCloneClinicalItem = () => {\r\n      getCloneVersion();\r\n      modalRefCloneClinicalItem.current.openModal()\r\n    };\r\n\r\n    const closeModalCloneClinicalItem = () => {\r\n      modalRefCloneClinicalItem.current.close()\r\n    };\r\n\r\n   useEffect( () => {\r\n     if(selectedItems){\r\n    let groups = getClinicalItemsByGroup(_.cloneDeep(selectedItems));\r\n          setVersions(groups);\r\n        let k = Object.keys(groups);\r\n     }\r\n   }, [selectedItems]);\r\n\r\n   useEffect( () => {\r\n    if (version){\r\n     let startAndEndDate = version.UniqueId.substring(0,version.UniqueId.lastIndexOf('|'))\r\n     let newUniqueId = startAndEndDate + '|' + selectedId\r\n     if (versions[newUniqueId]){\r\n      let v = { UniqueId: newUniqueId, values: versions[newUniqueId]}\r\n      setVersion(v);\r\n     }\r\n    }\r\n   }, [versions]);\r\n\r\n\r\n\r\n   const getClinicalItemsByGroup =(cls) =>{\r\n     if (cls.length === 0) return {};\r\n    cls.forEach(function (element) {\r\n      element.UniqueId = element.StartDate + '|' + element.EndDate + '|' + selectedId;\r\n    });\r\n\r\n let groups =  _.groupBy(cls, cl => cl.UniqueId);//_.mapValues(_.groupBy(cc[0].ClinicalItems, 'StartDate'));\r\nreturn groups\r\n   }\r\n\r\n   const selectVersion = (sUniqueId) => {\r\n       let v = { UniqueId: sUniqueId, values: versions[sUniqueId]}\r\n    setVersion(v);\r\n     console.log(v);\r\n   }\r\n\r\n   const onVersionSave = (v) => {\r\n\r\n    let cIs = v.values;\r\n     //let cC = _.cloneDeep(clinicalCategory);\r\n\r\n    let group = getClinicalItemsByGroup(cIs);\r\n    let groupKey = Object.keys(group)[0];\r\n    let vs = _.cloneDeep(versions);\r\n\r\n    if(cIs.length === 0){\r\n      vs = omit(vs,[v.UniqueId]);\r\n      setVersion(null);\r\n    }else{ \r\n      if (Object.keys(vs).includes(groupKey)){\r\n        vs[groupKey] = group[groupKey]\r\n        let v = { UniqueId: groupKey, values: group[groupKey]}\r\n        setVersion(v);\r\n      }else{\r\n        Object.assign(vs, group);\r\n    }\r\n  }\r\n    setVersions(vs);\r\n\r\n    let newItems = [].concat.apply([], Object.values(vs));\r\n    onSave(newItems);\r\n    // cC.ClinicalItems = [].concat.apply([], Object.values(vs));\r\n    //  setClinicalCategory(cC);\r\n   }\r\n\r\n   const omit = (obj, arr) =>\r\n  Object.keys(obj)\r\n    .filter(k => !arr.includes(k))\r\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\r\n\r\n   const getNewVersion = () => {\r\n    setNewVersion( {\r\n      UniqueId: new Date().toLocaleDateString() + '|' + new Date().toLocaleDateString() + '|' + selectedId,\r\n      values : []\r\n    });\r\n  }\r\n\r\n   const getCloneVersion = () => {\r\n    let v = _.cloneDeep(version);\r\n    v.values.map((cI) => {\r\n     cI.Id = 0\r\n    })\r\n     setCloneVersion(v);\r\n   }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <Versions>\r\n          <VersionList>\r\n         {true && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalNewClinicalItem();\r\n                  }}\r\n                  >\r\n                  New\r\n              </AwesomeButton>\r\n              }\r\n              {true &&\r\n              <Modal ref={modalRefNewClinicalItem}>\r\n                    <h1>Create New Clinical Item</h1>\r\n                       { React.cloneElement(detailComponent, \r\n                        { mode : \"new\" ,\r\n                        allAllocatedItems : selectedItems,\r\n                        selected : newVersion ,\r\n                        onSave : onVersionSave\r\n                        })\r\n                      }\r\n                    <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalNewClinicalItem();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>\r\n              }\r\n              {false && version &&\r\n                <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalCloneClinicalItem();\r\n                  }}\r\n                  >\r\n                  Clone\r\n              </AwesomeButton>\r\n}\r\n{false && version &&\r\n              <Modal ref={modalRefCloneClinicalItem}>\r\n                    <h1>Create Clone Clinical Item</h1>\r\n                      { React.cloneElement(detailComponent, \r\n                        { mode : \"clone\" ,\r\n                        allAllocatedItems : selectedItems,\r\n                        selected : cloneVersion ,\r\n                        onSave : onVersionSave\r\n                        })\r\n                      }\r\n                    <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalCloneClinicalItem();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>\r\n}\r\n          <ListGroup as=\"ul\">\r\n            {versions && \r\n              Object.keys(versions).map((k, i) => {\r\n              return <ListGroup.Item as=\"li\" key={i} \r\n                                onClick = {() => {selectVersion(k)}} \r\n                                active = {k === version?.UniqueId} >\r\n                        <Moment format=\"YYYY/MM/DD\" date ={k.split('|')[0]}/> - \r\n                        <Moment format=\"YYYY/MM/DD\" date ={k.split('|')[1]}/>\r\n                      </ListGroup.Item>;\r\n              })\r\n            }\r\n\t\t\t\t  </ListGroup>    \r\n          </VersionList>\r\n          {version &&\r\n          React.cloneElement(detailComponent, \r\n              { mode : \"detail\" ,\r\n              allAllocatedItems : selectedItems,\r\n              selected : version ,\r\n              onSave : onVersionSave\r\n               })\r\n          \r\n\r\n          }\r\n\r\n        </Versions>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicalCategoryVersions;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport ListDragAndDrop from './dnd/ListDragAndDrop';\r\nimport DatePicker from \"react-datepicker\";\r\nimport _ from 'lodash';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nimport { ClinicalCategoryService} from \"../Service/ClinicalCategory\";\r\nimport { ItemService} from \"../Service/ItemService\";\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nconst ClinicalItemDetail = ({mode, allAllocatedItems, selected, onSave}) => {\r\n  const itemSrv = new ItemService();\r\n\r\n    const [clinicalCategoryId, setClinicalCategoryId] = useState(null);\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n    const [clinicalItems, setClinicalItems] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n\r\n\r\n    useEffect(() =>{\r\n        if(selected){\r\n            let date = selected.UniqueId?.split('|');\r\n            if(date){\r\n                setStartDate(date[0]);\r\n                setEndDate(date[1]);\r\n                setClinicalCategoryId(date[2]);\r\n            }\r\n            setClinicalItems(selected.values);\r\n        }\r\n    },[selected]);\r\n\r\n    useEffect( () =>{\r\n      loadItems();\r\n    },[allAllocatedItems]);\r\n    const loadItems = async() => {\r\n      let items = await itemSrv.getItems();\r\n            let is = items.map((item) => {\r\n              return {...item, isAvailable: true}\r\n            })\r\n                        setItems(is);\r\n          //  setOptions(getOptions(is));\r\n    }\r\n\r\n   useEffect( () =>{\r\n         setOptions(getOptions(items));\r\n  },[items]);\r\n\r\n  useEffect( () =>{\r\n    if (allAllocatedItems){\r\n      if(items.length === 0) return;\r\n      let currentAllocatedItemIds = clinicalItems.map(x=>x.ItemId);\r\n      let allAllocatedItemIds = allAllocatedItems.map(x=>x.ItemId);\r\n      let allAllocatedItemIdsExceptCurrent \r\n                      = allAllocatedItemIds\r\n                        .filter(x =>!currentAllocatedItemIds.includes(x))\r\n\r\n   let is = _.cloneDeep(items);\r\n   let x = is.map((item) => {\r\n        if (allAllocatedItemIdsExceptCurrent.includes(item.Id)) {\r\n          let cI = allAllocatedItems.find(x=>x.ItemId === item.Id);\r\n            return {...item, isAvailable: false, label: item.Code + ' ' \r\n                                    + moment(cI.StartDate).format('YYYY/MM/DD') + '-' \r\n                                    + moment(cI.EndDate).format('YYYY/MM/DD')};\r\n        }else{\r\n             return {...item, isAvailable: true, label: item.Code};\r\n        }\r\n      })\r\n      //setItems(x);\r\n      setOptions(getOptions(x));\r\n      \r\n    }\r\n},[allAllocatedItems,clinicalItems,items]);\r\n  \r\n    useEffect(() => {\r\n      if (startDate){\r\n        let cIs = _.cloneDeep(clinicalItems);\r\n        cIs.map((cI) => {\r\n          return cI.StartDate = startDate\r\n        });\r\n        setClinicalItems(cIs);\r\n      }\r\n    }, [startDate]);\r\n\r\n    useEffect(() => {\r\n      if (endDate) {\r\n        let cIs = _.cloneDeep(clinicalItems);\r\n        cIs.map((cI) => {\r\n          return cI.EndDate = endDate\r\n        });\r\n        setClinicalItems(cIs);\r\n      }\r\n    }, [endDate]);\r\n    \r\n       const updateStartDate = (date) => {\r\n        setStartDate(date);\r\n       }    \r\n  \r\n      const updateEndDate = (date) => {\r\n        setEndDate(date);\r\n      }\r\n      \r\n      const onChange = (selectedValues) => {\r\n        let cItems = [...clinicalItems];\r\n        let cItemIds = cItems.map(x => x.ItemId);\r\n\r\n        let deletedItems = _.difference(cItemIds,selectedValues);\r\n        cItems = cItems.filter(x=>!deletedItems.includes(x.ItemId) )\r\n\r\n        let addedItems = _.difference(selectedValues,cItemIds);\r\n        addedItems.map((id)=>{\r\n         return cItems.push(\r\n          {\r\n            Id: 0, \r\n            ClinicalCategoryId: clinicalCategoryId,\r\n            ItemId: id, \r\n            StartDate: startDate, \r\n            EndDate: endDate\r\n          });\r\n        })\r\n        setClinicalItems(cItems);\r\n        onSave(\r\n          { UniqueId: selected.UniqueId, values: cItems});\r\n      };\r\n      \r\n      const getOptions = (items) => {\r\n        let is = _.cloneDeep(items);\r\n          return is\r\n            .map((i) => {\r\n              return {label: i.label, isAvailable: i.isAvailable, value:i.Id}\r\n        })\r\n      }\r\n\r\n    return (\r\n        <Container>\r\n        <h1>Clinical Item detail</h1>\r\n          <div className = \"header\">\r\n            <div>\r\n              <Moment format=\"YYYY/MM/DD\" date ={startDate}/> - \r\n              <Moment format=\"YYYY/MM/DD\" date ={endDate}/>\r\n          </div>\r\n          <div>\r\n            <DatePicker \r\n              selected={Date.parse(startDate)} \r\n              onChange={date => updateStartDate(date)} \r\n              disabled = {mode === \"detail\" ? true : false}/>\r\n            <DatePicker \r\n              selected={Date.parse(endDate)} \r\n              onChange={date => updateEndDate(date)} \r\n              disabled = {mode === \"detail\" ? true : false}/>\r\n          </div>\r\n            </div>\r\n          <div className = \"mid\">\r\n  \r\n            {options && clinicalItems && allAllocatedItems && \r\n            <ListDragAndDrop \r\n                options = {options} \r\n                selected = {clinicalItems?.map(x=>x.ItemId)} \r\n                onChange = {onChange}/>}\r\n             \r\n           \r\n          </div>\r\n          <div>\r\n           \r\n          </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ClinicalItemDetail;","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\nimport ListDragAndDrop from './dnd/ListDragAndDrop';\r\nimport DatePicker from \"react-datepicker\";\r\nimport _ from 'lodash';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nimport { ClinicalCategoryService } from \"../Service/ClinicalCategory\";\r\nimport { ProductService } from \"../Service/ProductService\";\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nconst ClinicalProductCategoryDetail = ({mode, allAllocatedItems, selected, onSave}) => {\r\n    const [clinicalCategoryId, setClinicalCategoryId] = useState(null);\r\n    const [startDate, setStartDate] = useState(null);\r\n    const [endDate, setEndDate] = useState(null);\r\n     const [clinicalItems, setClinicalItems] = useState([]);\r\n    // const [originalClinicalItems, setOriginalClinicalItems] = useState([]);\r\n    const [items, setItems] = useState([]);\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const productSrv = new ProductService();\r\n    //const clinicalCategorySrv = new ClinicalCategoryService();\r\n\r\n    useEffect(() =>{\r\n        if(selected){\r\n            let date = selected.UniqueId?.split('|');\r\n            if(date){\r\n                setStartDate(date[0]);\r\n                setEndDate(date[1]);\r\n                setClinicalCategoryId(date[2]);\r\n            }\r\n             setClinicalItems(selected.values);\r\n            // setOriginalClinicalItems(selected.values);\r\n        }\r\n    },[selected]);\r\n\r\n    useEffect( () =>{\r\n      loadItems();\r\n    },[allAllocatedItems]);\r\n\r\n   useEffect( () =>{\r\n         setOptions(getOptions(items));\r\n  },[items]);\r\n\r\n//   useEffect( () =>{\r\n//     handleIsDirty();\r\n// },[clinicalItems]);\r\n\r\n  useEffect( () =>{\r\n    if (allAllocatedItems){\r\n      if(items.length === 0) return;\r\n      let currentAllocatedItemIds = clinicalItems.map(x=>x.ProductCategoryId);\r\n      let allAllocatedItemIds = allAllocatedItems.map(x=>x.ProductCategoryId);\r\n      let allAllocatedItemIdsExceptCurrent \r\n                      = allAllocatedItemIds\r\n                        .filter(x =>!currentAllocatedItemIds.includes(x))\r\n\r\n   let is = _.cloneDeep(items);\r\n   let x = is.map((item) => {\r\n       let cI = allAllocatedItems.find(x=>x.ProductCategoryId === item.Id);\r\n        if (allAllocatedItemIdsExceptCurrent.includes(item.Id) \r\n            && (cI.StartDate !== startDate && cI.EndDate !== endDate)) {\r\n                return {...item, isAvailable: false, label: item.Name + ' ' \r\n                                    + moment(cI.StartDate).format('YYYY/MM/DD') + '-' \r\n                                    + moment(cI.EndDate).format('YYYY/MM/DD')};\r\n        }else{\r\n                return {...item, isAvailable: true, label: item.Name};\r\n        }\r\n      })\r\n      //setItems(x);\r\n      setOptions(getOptions(x));\r\n      \r\n    }\r\n},[allAllocatedItems,clinicalItems,items]);\r\n  \r\n    useEffect(() => {\r\n      if (startDate){\r\n        let cIs = _.cloneDeep(clinicalItems);\r\n        cIs.map((cI) => {\r\n          return cI.StartDate = startDate\r\n        });\r\n        setClinicalItems(cIs);\r\n      }\r\n    }, [startDate]);\r\n\r\n    useEffect(() => {\r\n      if (endDate) {\r\n        let cIs = _.cloneDeep(clinicalItems);\r\n        cIs.map((cI) => {\r\n          return cI.EndDate = endDate\r\n        });\r\n        setClinicalItems(cIs);\r\n      }\r\n    }, [endDate]);\r\n    \r\n       const loadItems = async() => {\r\n      let items = await productSrv.getProductCategories();\r\n            let is = items.map((item) => {\r\n              return {...item, isAvailable: true, label: item.Name}\r\n            })\r\n                        setItems(is);\r\n          //  setOptions(getOptions(is));\r\n    }\r\n\r\n      //  const SaveClinicalItem =  async() => {\r\n      //      console.log(clinicalItems)\r\n      //      let group = null;\r\n      //      if(clinicalCategoryId === \"0\") {\r\n      //       group = {Items : clinicalItems}\r\n      //      }else{\r\n      //       group = await clinicalCategorySrv.SaveProductCategories({\r\n      //         ClinicalCategoryId:clinicalCategoryId,\r\n      //         StartDate: startDate,\r\n      //         EndDate: endDate,\r\n      //         ClinicalProductCategories :clinicalItems\r\n      //        });\r\n      //      }\r\n         \r\n      //    console.log(group);\r\n\r\n      //     group && onSave(\r\n      //       { UniqueId: selected.UniqueId, values: group.Items});\r\n      //     group && setOriginalClinicalItems(group.Items);\r\n      //     group && setClinicalItems(group.Items);\r\n      \r\n\r\n      //  }\r\n\r\n       const updateStartDate = (date) => {\r\n        setStartDate(date);\r\n       }    \r\n  \r\n      const updateEndDate = (date) => {\r\n        setEndDate(date);\r\n      }\r\n      \r\n      const onItemChange = (selectedValues) => {\r\n        let cItems = [...clinicalItems];\r\n        let cItemIds = cItems.map(x => x.ProductCategoryId);\r\n\r\n        let deletedItems = _.difference(cItemIds,selectedValues);\r\n        cItems = cItems.filter(x=>!deletedItems.includes(x.ProductCategoryId) )\r\n\r\n        let addedItems = _.difference(selectedValues,cItemIds);\r\n        addedItems.map((id)=>{\r\n         return cItems.push(\r\n          {\r\n            Id: 0, \r\n            ClinicalCategoryId: clinicalCategoryId * 1,\r\n            ProductCategoryId: id * 1, \r\n            StartDate: startDate, \r\n            EndDate: endDate\r\n          });\r\n        })\r\n        setClinicalItems(cItems);\r\n        onSave(\r\n          { UniqueId: selected.UniqueId, values: cItems});\r\n      };\r\n      \r\n      const getOptions = (items) => {\r\n        let is = _.cloneDeep(items);\r\n          return is\r\n            .map((i) => {\r\n              return {label: i.label, isAvailable: i.isAvailable, value:i.Id}\r\n        })\r\n      }\r\n\r\n    //   const handleIsDirty = () =>{\r\n    //     let isDirtTemplate = !_.isEqual(clinicalItems, originalClinicalItems);\r\n\r\n    //    setIsDirty(isDirtTemplate);\r\n    //  }\r\n\r\n    return (\r\n        <Container>\r\n        <h1>Clinical Product Category detail</h1>\r\n        {/* {isDirty && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    SaveClinicalItem();\r\n                  }}\r\n                  >\r\n                  {true? \"Save\" : \"Create\"}\r\n        </AwesomeButton>} */}\r\n\r\n\r\n          <div className = \"header\">\r\n            <div>\r\n              <Moment format=\"YYYY/MM/DD\" date ={startDate}/> - \r\n              <Moment format=\"YYYY/MM/DD\" date ={endDate}/>\r\n          </div>\r\n          <div>\r\n            <DatePicker \r\n              selected={Date.parse(startDate)} \r\n              onChange={date => updateStartDate(date)} \r\n              disabled = {mode === \"detail\" ? true : false}/>\r\n            <DatePicker \r\n              selected={Date.parse(endDate)} \r\n              onChange={date => updateEndDate(date)} \r\n              disabled = {mode === \"detail\" ? true : false}/>\r\n          </div>\r\n            </div>\r\n          <div className = \"mid\">\r\n  \r\n            {options && clinicalItems && allAllocatedItems && \r\n            <ListDragAndDrop \r\n                options = {options} \r\n                selected = {clinicalItems?.map(x=>x.ProductCategoryId)} \r\n                onChange = {onItemChange}/>}\r\n             \r\n           \r\n          </div>\r\n          <div>\r\n           \r\n          </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default ClinicalProductCategoryDetail;","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateFeatures } from \"../Store/ClinicalCategory/clinicalCategory\";\r\nimport styled from 'styled-components';\r\nimport ListDragAndDrop from './dnd/ListDragAndDrop';\r\n\r\nimport _ from 'lodash'; \r\n\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { FeatureService } from \"../Service/FeatureService\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n        background: red;\r\n        display: flex;\r\n    }\r\n    .mid{\r\n        background: orange;\r\n        display: flex;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst ClinicalFeatureDetail = ({selectedId, selectedItems, onSave}) => {\r\n  const dispatch = useDispatch();\r\n  const featureSrv = new FeatureService();\r\n  // const [clinicalCategoryId, setClinicalCategoryId] = useState(null);\r\n  // const [clinicalFeatures, setClinicalFeatures] = useState([]);\r\n  const clinicalCategoryId = useSelector(state => state.entities.clinicalCategory.Id);\r\n  const clinicalFeatures = useSelector(state => state.entities.clinicalCategory.Features);\r\n  const [features, setFeatures] = useState([]);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  // useEffect( () => {\r\n  //   if(selectedId){\r\n  //       setClinicalCategoryId(selectedId);\r\n  //   } \r\n  //  },[selectedId]);\r\n\r\n  //  useEffect( () => {\r\n  //   if(selectedItems){\r\n  //       setClinicalFeatures(selectedItems); \r\n  //   } \r\n  //  },[selectedItems]);\r\n\r\n   useEffect( () => {\r\n    loadItems();\r\n   }, [clinicalCategoryId]);\r\n\r\n   useEffect( () =>{\r\n    setOptions(getOptions(features));\r\n},[features]);\r\n\r\n// useEffect( () =>{\r\n//     let c = _.cloneDeep(selectedClinicalCategory);\r\n//     c.Ancillaries = ancillaries;\r\n//     setCode(c);\r\n// },[clinicalFeatures]);\r\n\r\n\r\nconst loadItems = async() => {\r\n    let items = await featureSrv.getFeatureListWithDependents();\r\n          let is = items.map((item) => {\r\n            if (item.ClinicalCategoryId === null \r\n              || item.ClinicalCategoryId === 0 \r\n              || item.ClinicalCategoryId === clinicalCategoryId)\r\n            {\r\n              return {...item, isAvailable: true, label: item.Name}\r\n            }else{\r\n              return {...item, isAvailable: false, label: item.Name + '(' + item.ClinicalCategory?.Name + ')'}\r\n            }\r\n          })\r\n          setFeatures(is);\r\n        //  setOptions(getOptions(is));\r\n  }\r\n\r\n  const getOptions = (items) => {\r\n    let is = _.cloneDeep(items);\r\n      return is\r\n        .map((i) => {\r\n          return {label: i.label, isAvailable: i.isAvailable, value:i.Id}\r\n    })\r\n  }\r\n\r\n  const onChange = (selectedValues) => {\r\n    let cItems = _.cloneDeep(features);\r\n    let cItemIds = cItems.map(x => x.Id);\r\n\r\n    let deletedItems = _.difference(cItemIds,selectedValues);\r\n    cItems = cItems.filter(x=>!deletedItems.includes(x.Id) )\r\n\r\n    // let addedItems = _.difference(selectedValues,cItemIds);\r\n    // addedItems.map((id)=>{\r\n    //     let index = cItems.findIndex(x=> x.Id === id)\r\n    //     cItems[index].ClinicalCategoryId = clinicalCategoryId\r\n    // // return f;\r\n    // })\r\n    cItems.map((i)=>{\r\n        i.ClinicalCategoryId = clinicalCategoryId\r\n    })\r\n    dispatch(updateFeatures(cItems));\r\n};\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Item Edit</h1>\r\n         <div>\r\n         <ListDragAndDrop \r\n              options = {options} \r\n              selected = {clinicalFeatures?.map(x=>x.Id)} \r\n              onChange = {onChange}/>\r\n         </div>\r\n\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicalFeatureDetail;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateClinicalCategory,  SaveClinicalCategory } from \"../Store/ClinicalCategory/clinicalCategory\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport ClinicalCategoryVersions from \"./ClinicalCategoryVersions\";\r\nimport { ClinicalCategoryService } from \"../Service/ClinicalCategory\";\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\n\r\nimport ClinicalItemDetail from \"./ClinicalItemDetail\";\r\nimport ClinicalProductCategoryDetail from \"./ClinicalProductCategoryDetail\";\r\nimport ClinicalFeatureDetail from \"./ClinicalFeatureDetail\";\r\n\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const SuiteStyle = styled.div`\r\n    background: blue;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\nexport const SuiteDetailStyle = styled.div`\r\n    background: blue;\r\n    display: flex;\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst Suite = ({children}) => {\r\n    return (<SuiteStyle>{children}</SuiteStyle> );\r\n}\r\n\r\nconst SuiteDetail = ({children}) => {\r\n  return (<SuiteDetailStyle>{children}</SuiteDetailStyle> );\r\n}\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst ClinicalCategoryEdit = ({ onSave}) => {\r\n  const dispatch = useDispatch();\r\n  //const clinicalCategorySrv =  new ClinicalCategoryService();\r\n // const [clinicalCategory, setClinicalCategory] = useState(clinicalCategorySrv.getNewClinicalCategory());\r\n const clinicalCategory =  useSelector(state => state.entities.clinicalCategory);\r\n const originalClinicalCategory =  useSelector(state => state.entities.originalClinicalCategory);\r\n const [isDirty, setIsDirty] = useState(false);\r\n const [isClinicalItemDirty, setIsClinicalItemDirty] = useState(false);\r\n const [isProductCategoryDirty, setIsProductCategoryDirty] = useState(false);\r\n const [isFeaturesDirty, setIsFeaturesDirty] = useState(false);\r\n  // useEffect( () => {\r\n  //   if (selected){\r\n  //     setClinicalCategory(selected);\r\n  //   }\r\n  //  }, [selected]);\r\n\r\n  useEffect( () =>{\r\n    handleIsDirty();\r\n},[clinicalCategory]);\r\n\r\nconst handleIsDirty = () =>{\r\n  let cc = _.cloneDeep(clinicalCategory);\r\n  let occ = _.cloneDeep(originalClinicalCategory);\r\n  let pcs = _.sortBy(clinicalCategory.ClinicalProductCategories, function(i) { \r\n    return i.Id; \r\n    })\r\n    .map((i) => {\r\n          return  {\r\n              ClinicalCategoryId : i.ClinicalCategoryId,\r\n                  StartDate : i.StartDate,\r\n                  EndDate : i.EndDate,\r\n                  ProductCategoryId : i.ProductCategoryId\r\n              }\r\n      })\r\n  let opcs = _.sortBy(originalClinicalCategory.ClinicalProductCategories, function(i) { \r\n    return i.Id; \r\n    })\r\n    .map((i) => {\r\n      return  {\r\n          ClinicalCategoryId : i.ClinicalCategoryId,\r\n          StartDate : i.StartDate,\r\n          EndDate : i.EndDate,\r\n          ProductCategoryId : i.ProductCategoryId\r\n      }\r\n  })\r\n\r\n let cis = _.sortBy(clinicalCategory.ClinicalItems, function(i) { \r\n    return i.Id; \r\n    })\r\n    .map((i) => {\r\n          return  {\r\n              ClinicalCategoryId : i.ClinicalCategoryId,\r\n                  StartDate : i.StartDate,\r\n                  EndDate : i.EndDate,\r\n                  ItemId : i.ItemId\r\n              }\r\n      })\r\n  let ocis = _.sortBy(originalClinicalCategory.ClinicalItems, function(i) { \r\n    return i.Id; \r\n    })\r\n    .map((i) => {\r\n      return  {\r\n          ClinicalCategoryId : i.ClinicalCategoryId,\r\n          StartDate : i.StartDate,\r\n          EndDate : i.EndDate,\r\n          ItemId : i.ItemId\r\n      }\r\n  })\r\n\r\n  let cfs = _.sortBy(clinicalCategory.Features, function(i) { \r\n    return i.Id; \r\n    });\r\n\r\n    let ocfs = _.sortBy(originalClinicalCategory.Features, function(i) { \r\n      return i.Id; \r\n      })\r\n\r\n  cc.ClinicalItems = cis;\r\n  occ.ClinicalItems = ocis;\r\n\r\n  cc.ClinicalProductCategories = pcs;\r\n  occ.ClinicalProductCategories = opcs;\r\n\r\n  cc.Features = cfs;\r\n  occ.Features = ocfs;\r\n\r\n      let isDirtyItems = !_.isEqual(cis, ocis);\r\n      let isDirtFeatrues = !_.isEqual(cfs, ocfs);\r\n      let isDirtProductCategories = !_.isEqual(pcs, opcs);\r\n      let isDirtTemplate = !_.isEqual(cc, occ);\r\n\r\n      setIsClinicalItemDirty(isDirtyItems);\r\n      setIsProductCategoryDirty(isDirtProductCategories);\r\n      setIsFeaturesDirty(isDirtFeatrues);\r\n      setIsDirty(isDirtTemplate);\r\n}\r\n\r\n   const onClinicalItemsSave = (vs) => {\r\n     let cC = _.cloneDeep(clinicalCategory);\r\n\r\n    cC.ClinicalItems = [].concat.apply([], Object.values(vs));\r\n    // setClinicalCategory(cC);\r\n    dispatch(updateClinicalCategory(cC));\r\n   }\r\n\r\n   const onClincalProductCategoriesSave = (vs) => {\r\n    let cC = _.cloneDeep(clinicalCategory);\r\n\r\n   cC.ClinicalProductCategories = [].concat.apply([], Object.values(vs));\r\n   dispatch(updateClinicalCategory(cC));\r\n  }\r\n\r\n  const onClincalFeaturesSave = (features) =>{\r\n    let cC = _.cloneDeep(clinicalCategory);\r\n\r\n    cC.Features = features;\r\n    dispatch(updateClinicalCategory(cC));\r\n  }\r\n\r\n   const updateCCCode = (value) => {\r\n    let cc = {...clinicalCategory, Code : value}\r\n    dispatch(updateClinicalCategory(cc));\r\n   }\r\n\r\n   const updateCCName = (value) => {\r\n    let cc = {...clinicalCategory, Name : value}\r\n    dispatch(updateClinicalCategory(cc));\r\n  }\r\n\r\n  const Save = async() => {\r\n    dispatch(SaveClinicalCategory(clinicalCategory));\r\n    //         let cC = await onSave(clinicalCategory);\r\n    //  setClinicalCategory(cC);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Clinical Category Edit</h1>\r\n        <Suite>\r\n          <h1>Clinical Category - {clinicalCategory.Code}</h1>\r\n         <SuiteDetail>\r\n         <InputBlock>\r\n              <span>Code</span>\r\n              <input\r\n                type=\"text\"\r\n                value={clinicalCategory.Code}\r\n                onChange={e => updateCCCode(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n          <InputBlock>\r\n              <span>Name</span>\r\n              <input\r\n                type=\"text\"\r\n                value={clinicalCategory.Name}\r\n                onChange={e => updateCCName(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n              {isDirty && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    Save();\r\n                  }}\r\n                  >\r\n                  {clinicalCategory.Id !== 0? \"Save\" : \"Create\"}\r\n        </AwesomeButton>}\r\n         </SuiteDetail>\r\n        </Suite>\r\n        <Tabs forceRenderTabPanel={\"false\"}>\r\n    <TabList >\r\n                <Tab>Item{isClinicalItemDirty && <span>*</span>}</Tab>\r\n                <Tab>Product Category{isProductCategoryDirty && <span>*</span>}</Tab>\r\n                <Tab>Features{isFeaturesDirty && <span>*</span>}</Tab>\r\n    </TabList>\r\n\r\n    <TabPanel show={\"true\"}>\r\n    <ClinicalCategoryVersions\r\n            selectedId ={clinicalCategory.Id}\r\n            selectedItems ={clinicalCategory.ClinicalItems} \r\n            onSave = {onClinicalItemsSave}\r\n            detailComponent = {<ClinicalItemDetail/>}\r\n        />\r\n    </TabPanel>\r\n    <TabPanel>\r\n    <ClinicalCategoryVersions\r\n            selectedId ={clinicalCategory.Id}\r\n            selectedItems ={clinicalCategory.ClinicalProductCategories} \r\n            onSave = {onClincalProductCategoriesSave}\r\n            detailComponent = {<ClinicalProductCategoryDetail/>}\r\n        />\r\n    </TabPanel>\r\n    <TabPanel>\r\n    <ClinicalFeatureDetail\r\n            selectedId ={clinicalCategory.Id}\r\n            selectedItems ={clinicalCategory.Features} \r\n            onSave = {onClincalFeaturesSave}\r\n        />\r\n    </TabPanel>\r\n  </Tabs>\r\n        \r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ClinicalCategoryEdit;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadClinicalCategory,  SaveClinicalCategory } from \"../Store/ClinicalCategory/clinicalCategory\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ClinicalCategoryEdit from \"./ClinicalCategoryEdit\";\r\nimport { useParams } from 'react-router-dom';\r\n//import { ClinicalCategoryService }from \"../Service/ClinicalCategory\";\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nconst ProductEditData = () => {\r\n // const ClinicalCategorySrv = new ClinicalCategoryService();\r\n\r\n  //const [clinicalCategory, setClinicalCategory] = useState(ClinicalCategorySrv.getNewClinicalCategory());\r\n  const clinicalCategory =  useSelector(state => state.entities.clinicalCategory);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { Id } = useParams();\r\n\r\n  // useEffect( () => {\r\n  //   selectedItem && onItemSave(selectedItem)\r\n  //  }, [selectedItem]);\r\n\r\n  useEffect( () => {\r\n    LoadClinicalItem()\r\n   }, []);\r\n\r\n   useEffect( () => {\r\n    if (clinicalCategory && clinicalCategory.Id > 0 && Id === \"new\"){\r\n      let newLocation = location.pathname.replace(\"/new\", \"/\" + clinicalCategory.Id );\r\n           history.push(newLocation);\r\n    }\r\n   }, [clinicalCategory]);\r\n\r\n   const LoadClinicalItem = async() => {\r\n    \r\n    let cc = {};\r\n    if (Id === \"new\"){\r\n     // cc = ClinicalCategorySrv.getNewClinicalCategory();\r\n    }else{\r\n     // let ccList = await ClinicalCategorySrv.getClinicalCategotyWithDependents(Id);\r\n      // if (ccList.length === 0) return; \r\n      // cc = ccList[0];\r\n      dispatch(loadClinicalCategory(Id));\r\n    }\r\n   // setClinicalCategory(cc);\r\n     \r\n   }\r\n\r\n  // const Save = async(clinialCategory) => {\r\n  //   // let cC = {};\r\n  //   //   if (clinialCategory.Id === 0){\r\n  //   //     // cC = await ClinicalCategorySrv.SaveClinicalCategoryWithDependents(clinialCategory);\r\n  //   //      dispatch(SaveClinicalCategory(clinialCategory));\r\n  //   //     let newLocation = location.pathname.replace(\"/new\", \"/\" + cC.Id );\r\n  //   //     history.push(newLocation);\r\n  //   //   }else{\r\n  //   //     // cC = await ClinicalCategorySrv.SaveClinicalCategoryWithDependents(\r\n  //   //     //     {...clinialCategory, ClinicalItems: [], ProductCategories: [], Features: []});\r\n  //   //     dispatch(SaveClinicalCategory({...clinialCategory, ClinicalItems: [], ProductCategories: [], Features: []}));\r\n  //   //   }\r\n  //   //   //setClinicalCategory(cC);\r\n  //   //   return cC;\r\n  //   dispatch(SaveClinicalCategory(clinialCategory));\r\n  // }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <ClinicalCategoryEdit/>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ProductEditData;\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const serviceGetItem = createAction(\"service/GetItem\");\r\nexport const serviceSaveItem = createAction(\"service/SaveItem\");\r\n","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { serviceGetItem, serviceSaveItem } from './service';\r\nimport { ItemService } from '../../Service/ItemService';\r\n\r\nconst itemSrv = new ItemService();\r\n\r\nexport const itemReceived = createAction(\"item/itemReceived\");\r\nexport const itemSaved = createAction(\"item/itemSaved\");\r\n\r\nconst  itemSlice = createSlice({\r\n    name: 'item',\r\n    initialState: itemSrv.getNewItem(),\r\n    reducers: {\r\n      updateItem(item, action){\r\n        return action.payload; \r\n      },\r\n    },\r\n  })\r\n  \r\n  export const {\r\n     updateItem } = itemSlice.actions\r\n  export default itemSlice.reducer\r\n\r\n // Action Creators\r\n\r\n  export const loadItem = (id) => serviceGetItem({\r\n    data: id,\r\n    onSuccess: itemReceived.type\r\n  });\r\n\r\n\r\n  export const SaveItem = (item) => serviceSaveItem({\r\n    data: item,\r\n    onSuccess: itemSaved.type\r\n  });\r\n\r\n\r\n\r\n  //createselector from reselect for cachng","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ItemService } from '../../Service/ItemService';\r\n\r\nconst itemSrv = new ItemService();\r\n\r\nconst   originalItemSlice = createSlice({\r\n    name: 'originalItem',\r\n    initialState: itemSrv.getNewItem(),\r\n    reducers: {\r\n      updateOriginalItem(errorString, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { updateOriginalItem } = originalItemSlice.actions\r\n  export default originalItemSlice.reducer","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateItem, SaveItem } from \"../Store/Item/item\";\r\n//import { updateOriginalItem } from \"../Store/Product/originalItem\";\r\nimport styled from 'styled-components';\r\n\r\nimport _ from 'lodash'; \r\nimport Moment from 'react-moment';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport { ItemService } from \"../Service/ItemService\";\r\n\r\n\r\nexport const Container = styled.div`\r\n \r\n    max-height:100%;\r\n    overflow-y:auto;\r\n\r\n    .header{\r\n    \r\n        display: flex;\r\n        justify-content: space-around;\r\n        margin: 10px;\r\n    }\r\n    .mid{\r\n\r\n        display: flex;\r\n        justify-content: space-around;\r\n        margin: 10px;\r\n    }\r\n    .footer{\r\n\r\n    }\r\n`\r\n\r\nexport const InputBlockStyle = styled.div`\r\n    background: green;\r\n    max-height:100%;\r\n    overflow-y:auto;\r\n`\r\n\r\nconst InputBlock = ({children}) => {\r\n  return (<InputBlockStyle>{children}</InputBlockStyle> );\r\n}\r\n\r\n\r\nconst ItemDetail = () => {\r\n  const dispatch = useDispatch();\r\n  //const itemSrv = new ItemService();\r\n  \r\n const selectedItem = useSelector(state => state.entities.item);\r\n const [item, setItem] = useState(selectedItem); // ?? itemSrv.getNewItem());\r\n  const originalItem = useSelector(state => state.entities.originalItem);\r\n  const [isDirtyItem, setIsDirtyItem] = useState(false);\r\n  // useEffect( () => {\r\n  //   selectedItem && setItem(selectedItem);\r\n  //  },[selectedItem]);\r\n\r\n  useEffect( () =>{\r\n    setItem(selectedItem);\r\n  },[selectedItem])\r\n\r\n  useEffect( () =>{\r\n    handleIsDirtyItem()\r\n  },[item])\r\n\r\n  useEffect( () =>{\r\n    handleIsDirtyItem()\r\n  },[originalItem]);\r\n  \r\n  \r\n  const handleIsDirtyItem = () =>{\r\n    let isDirtyItem = !_.isEqual(item, originalItem);\r\n  \r\n    setIsDirtyItem(isDirtyItem);\r\n  }\r\n\r\n   const Save =  async() => {\r\n    console.log(item)\r\n   // let Id = await itemSrv.SaveItem(item);\r\n    dispatch(SaveItem(item))\r\n    //console.log(Id);\r\n   // let i = {...item, Id};\r\n    //setItem(i);\r\n    //onSave(i);\r\n  }\r\n  \r\n   const updateStartDate = (date) =>{\r\n    let v= {...item, StartDate:date}\r\n    setItem(v);\r\n   }\r\n\r\n   const updateEndDate = (date) =>{\r\n    let v= {...item, EndDate:date}\r\n    setItem(v);\r\n  }\r\n\r\n  const updateCode = (e) => {\r\n    let i = {...item, Code:e}\r\n    setItem(i);\r\n    console.log(e);\r\n  }\r\n  const updateType = (e) => {\r\n   // setItem({...item, Type:e});\r\n   setItem({...item, Type:e})\r\n    console.log(e);\r\n  }\r\n  const UpdateSpecialityCode = (e) => {\r\n    //setItem({...item, SpecialityCode:e});\r\n    setItem({...item, SpecialityCode:e})\r\n    console.log(e);\r\n  }\r\n  const updateProviderNumber = (e) => {\r\n    //setItem({...item, ProviderNumber:e});\r\n    setItem({...item, ProviderNumber:e})\r\n    console.log(e);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment> \r\n      <Container>\r\n        <h1>Item Edit</h1>\r\n        {isDirtyItem &&\r\n        <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    Save();\r\n                  }}\r\n                  >\r\n                  {item.Id > 0 ? \"Save\" : \"Create\"}\r\n        </AwesomeButton>\r\n        }\r\n        <div className = \"header\">\r\n          \r\n        <div>\r\n         <Moment format=\"YYYY/MM/DD\" date ={item?.StartDate}/> - <Moment format=\"YYYY/MM/DD\" date ={item?.EndDate}/>\r\n         </div>\r\n         <div>\r\n        <DatePicker selected={Date.parse(item.StartDate)} onChange={date => updateStartDate(date)} />\r\n        <DatePicker selected={Date.parse(item.EndDate)} onChange={date => updateEndDate(date)} />\r\n        </div>\r\n        </div>\r\n        <div className = \"mid\">\r\n          <InputBlock>\r\n              <span>Code</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.Code}\r\n                onChange={e => updateCode(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n            <InputBlock>\r\n              <span>Type</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.Type}\r\n                onChange={e => updateType(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n            <InputBlock>\r\n              <span>Speciality Code</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.SpecialityCode}\r\n                onChange={e => UpdateSpecialityCode(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n            <InputBlock>\r\n              <span>ProviderNumber</span>\r\n              <input\r\n                type=\"text\"\r\n                value={item.ProviderNumber}\r\n                onChange={e => updateProviderNumber(e.target.value)}\r\n              />\r\n            </InputBlock>\r\n            \r\n         </div>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemDetail;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { updateItem } from \"../Store/Item/item\";\r\nimport { updateOriginalItem } from \"../Store/Item/originalItem\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\n\r\nimport { ItemService } from \"../Service/ItemService\";\r\nimport icons from 'glyphicons'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport ItemDetail from \"./ItemDetail\";\r\nimport { AwesomeButton } from \"react-awesome-button\";\r\nimport Modal from \"./Model\";\r\n\r\nexport const ListStyle = styled.div`\r\n\r\n`\r\nconst ItemList = () => {\r\n  const dispatch = useDispatch();\r\n  const itemSrv = new ItemService();\r\n  const [items, setItems] = useState([]);\r\n // const [selectedItem, setSelectedItem] = useState(null);\r\n  const selectedItem = useSelector(state => state.entities.item);\r\n\r\n  useEffect( () => {\r\n   loadSuites()\r\n  }, []);\r\n\r\n  useEffect( () => {\r\n    selectedItem && onItemSave(selectedItem)\r\n   }, [selectedItem]);\r\n   \r\nconst loadSuites = async() => {\r\n let items = await itemSrv.getItems()\r\n console.log(items);\r\n setItems(items);\r\n}\r\n\r\nconst modalRefCloneItem = React.useRef();\r\n\r\nconst openModalCloneItem = () => {\r\n  dispatch(updateItem({...selectedItem, Id : 0}));\r\n  modalRefCloneItem.current.openModal()\r\n  //  GetAllTemplate();\r\n};\r\n\r\nconst closeModalCloneItem = () => {\r\n  modalRefCloneItem.current.close()\r\n};\r\n\r\nconst modalRefNewItem = React.useRef();\r\n\r\nconst openModalNewItem = () => {\r\n  dispatch(updateItem(itemSrv.getNewItem()));\r\n  modalRefNewItem.current.openModal()\r\n};\r\n\r\nconst closeModalNewItem = () => {\r\n  modalRefNewItem.current.close()\r\n};\r\n\r\nconst COLUMN_WIDTH = 80;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Code\",\r\n    name: \"Code\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Type\",\r\n    name: \"Type\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"SpecialityCode\",\r\n    name: \"SpecialityCode\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"ProviderNumber\",\r\n    name: \"ProviderNumber\",\r\n    frozen: true,\r\n    width: 140\r\n  },\r\n  {\r\n    key: \"StartDate\",\r\n    name: \"StartDate\",\r\n    frozen: true,\r\n    width: 120\r\n  },\r\n  {\r\n    key: \"EndDate\",\r\n    name: \"EndDate\",\r\n    frozen: true,\r\n    width: 120\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 80\r\n  }\r\n];\r\n\r\n// const nameActions = [\r\n//   {\r\n//     icon: <span><button>{icons.arrowE}</button></span>,\r\n//     callback: () => {\r\n//       alert(\"Deleting\");\r\n//     }\r\n//   }\r\n// ];\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Action:  [\r\n      {\r\n        icon: <span><button>{icons.arrowE}</button></span>,\r\n        callback: () => {\r\n          let i = items.find( ({ Id }) => Id === row.Id);\r\n          dispatch(updateItem(i));\r\n         // dispatch(updateOriginalItem(i));\r\n        }\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n  \r\n  const onItemSave = (item) => {\r\n     let i = [...items];\r\n     if(item.Id !== 0){\r\n      let index = i.findIndex( ({ Id }) => Id === item.Id);\r\n      if (index > -1){\r\n        i[index] = item;\r\n      }else\r\n      {\r\n        i.push(item);\r\n      }\r\n      setItems(i);\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment> \r\n        <ListStyle>\r\n            <h1>Item List</h1>\r\n          \r\n            <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalNewItem();\r\n                  }}\r\n                  >\r\n                  New\r\n              </AwesomeButton>\r\n              <Modal ref={modalRefNewItem}>\r\n                    <h1>Create New Item</h1>\r\n                    <ItemDetail />\r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n\r\n                    onPress={() => {\r\n                        closeModalNewItem();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>  \r\n                {selectedItem.Id > 0 && <AwesomeButton\r\n                  type=\"primary\"\r\n                  ripple\r\n                  onPress={() => {\r\n                    openModalCloneItem();\r\n                  }}\r\n                  >\r\n                  Clone\r\n              </AwesomeButton>}\r\n              <Modal ref={modalRefCloneItem}>\r\n                    <h1>Create Clone Item</h1>\r\n                    <ItemDetail  /> \r\n                     <AwesomeButton\r\n                    type=\"primary\"\r\n                    ripple\r\n                    onPress={() => {\r\n                        closeModalCloneItem();\r\n                    }}\r\n                    >\r\n                    Close\r\n                </AwesomeButton>\r\n                </Modal>\r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => items[i]}\r\n                rowsCount={items.length}\r\n                minHeight={400}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ListStyle>\r\n        {selectedItem && <ItemDetail />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemList;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport _ from 'lodash'; \r\nimport ReactDataGrid from 'react-data-grid';\r\nimport * as workFlowSrv from \"../Service/WorkFlowService\";\r\nimport icons from 'glyphicons'\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport const ProductListStyle = styled.div`\r\n\r\n`\r\n\r\nconst COLUMN_WIDTH = 160;\r\n\r\nconst columns = [\r\n  {\r\n    key: \"Id\",\r\n    name: \"Id\",\r\n    frozen: true,\r\n    width: 40\r\n  },\r\n  {\r\n    key: \"Type\",\r\n    name: \"Type\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"API\",\r\n    name: \"API\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"ApprovalStatus\",\r\n    name: \"Status\",\r\n    frozen: true,\r\n    width: COLUMN_WIDTH\r\n  },\r\n  {\r\n    key: \"Action\",\r\n    name: \"Action\",\r\n    frozen: true,\r\n    width: 20\r\n  }\r\n];\r\n\r\nconst WorkFlowItemList = () => {\r\n  // const errorString = useSelector(state =>state.errorString);\r\n  const [workFlowItems, setWorkFlowItems] = useState([]);\r\n\r\n  useEffect( () => {\r\n   loadSuites()\r\n  }, []);\r\n\r\nconst loadSuites = async() => {\r\n let wFItems = await workFlowSrv.getItems()\r\n console.log(wFItems);\r\n setWorkFlowItems(wFItems);\r\n}\r\n\r\n// const nameActions = [\r\n//   {\r\n//     icon: <span><button>{icons.arrowE}</button></span>,\r\n//     callback: () => {\r\n//       alert(\"Deleting\");\r\n//     }\r\n//   }\r\n// ];\r\nfunction getCellActions(column, row) {\r\n  const cellActions = {\r\n    Action:  [\r\n      {\r\n        icon: <span> <Link className=\"link\" to={\"/WorkFlowDetail/\" + row.Id}><button>{icons.arrowE}</button></Link></span>//,\r\n        // callback: () => {\r\n        //   let id = row.Id;\r\n        //   return(<Redirect to=\"/productEdit/\"{id} />);\r\n        // }\r\n      }\r\n    ]\r\n  };\r\n  return cellActions[column.key];\r\n}\r\n\r\n\r\n   \r\n  return (\r\n    <React.Fragment> \r\n        <ProductListStyle>\r\n            <h1>WorkFlow Item List</h1> \r\n            <ReactDataGrid\r\n                columns={columns}\r\n                rowGetter={i => workFlowItems[i]}\r\n                rowsCount={workFlowItems.length}\r\n                minHeight={200}\r\n                getCellActions={getCellActions}\r\n            />\r\n        </ProductListStyle>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default WorkFlowItemList;\r\n\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport NavBar from './Components/NavBar';\nimport ErrorSection from './Components/ErrorSection';\nimport ProductList from './Components/productList';\nimport ProductEditContainer from './Components/ProductEditContainer';\nimport WorkFlowDetail from './Components/WorkFlowDetail';\nimport productCategoryList from './Components/ProductCategoryList';\nimport productCodeList from './Components/ProductCodeList';\nimport FeatureList from './Components/featureList';\nimport FeatureEditContainer from './Components/featureEditContainer';\nimport featureGroupList from './Components/FeatureGroupList';\nimport featureTypeList from './Components/FeatureTypeList';\nimport ClinicalCategoryList from './Components/ClinicalCategoryList';\nimport ClinicalCategoryData from './Components/ClinicalCategoryData';\nimport ItemList from './Components/ItemList';\nimport WorkFlowItemList from './Components/WorkFlowItemList';\n\n\nfunction App() {\n  return (\n    <React.Fragment> \n      <Router>\n        <NavBar></NavBar>\n        <ErrorSection/>\n        <Switch>\n            <Route path=\"/\" exact component={ProductList}/>\n            <Route path=\"/productlist\" exact component={ProductList}/>\n            <Route path=\"/productedit/:Id\" exact component={ProductEditContainer}/>\n            <Route path=\"/WorkFlowDetail/:Id\" exact component={WorkFlowDetail}/>\n            <Route path=\"/productCategoryList\" exact component={productCategoryList}/>\n            <Route path=\"/productCodeList\" exact component={productCodeList}/>\n            <Route path=\"/featurelist\" exact component={FeatureList}/>\n            <Route path=\"/featureedit/:Id\" exact component={FeatureEditContainer}/>\n            <Route path=\"/featureGroupList\" exact component={featureGroupList}/>\n            <Route path=\"/featureTypeList\" exact component={featureTypeList}/>       \n            <Route path=\"/ClinicalCategorylist\" exact component={ClinicalCategoryList}/>\n            <Route path=\"/ClinicalCategoryedit/:Id\" exact component={ClinicalCategoryData}/>\n            <Route path=\"/ItemList\" exact component={ItemList}/>\n            <Route path=\"/WorkFlowItemList\" exact component={WorkFlowItemList}/>\n          </Switch>\n        </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nconst   originalSuiteSlice = createSlice({\r\n    name: 'originalSuite',\r\n    initialState: productSrv.getNewSuite(),\r\n    reducers: {\r\n      updateOriginalSuite(errorString, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { updateOriginalSuite } = originalSuiteSlice.actions\r\n  export default originalSuiteSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nconst   originalCodeSlice = createSlice({\r\n    name: 'originalCode',\r\n    initialState: productSrv.getNewVersion(),\r\n    reducers: {\r\n      updateOriginalCode(errorString, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { updateOriginalCode } = originalCodeSlice.actions\r\n  export default originalCodeSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nconst   originalCategorySlice = createSlice({\r\n    name: 'originalCategory',\r\n    initialState: productSrv.getNewVersion(),\r\n    reducers: {\r\n      updateOriginalCategory(errorString, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { updateOriginalCategory } = originalCategorySlice.actions\r\n  export default originalCategorySlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\nimport { FeatureService } from '../../Service/FeatureService';\r\n\r\nconst itemSrv = new FeatureService();\r\n\r\nconst   originalFeatureSlice = createSlice({\r\n    name: 'originalFeature',\r\n    initialState: itemSrv.getNewFeature(),\r\n    reducers: {\r\n      updateOriginalFeature(errorString, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { updateOriginalFeature } = originalFeatureSlice.actions\r\n  export default originalFeatureSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\nimport { ClinicalCategoryService } from '../../Service/ClinicalCategory';\r\n\r\nconst cCSrv = new ClinicalCategoryService();\r\n\r\nconst   originalClinicalCategorySlice = createSlice({\r\n    name: 'originalClinicalCategory',\r\n    initialState: cCSrv.getNewClinicalCategory(),\r\n    reducers: {\r\n      updateOriginalClinicalCategory(cc, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { updateOriginalClinicalCategory} = originalClinicalCategorySlice.actions\r\n  export default originalClinicalCategorySlice.reducer","import { combineReducers } from 'redux';\r\nimport suiteReducer  from './Product/suite';\r\nimport originalSuiteReducer from './Product/originalSuite';\r\nimport versionReducer  from './Product/version';\r\nimport originalVersionReducer from './Product/originalVersion';\r\n//import CodeReducer  from './code';\r\nimport originalCodeReducer from './Product/originalCode';\r\n//import CategoryReducer  from './category';\r\nimport originalCategoryReducer from './Product/originalCategory';\r\nimport FeatureReducer  from './Feature/feature';\r\nimport originalFeatureReducer from './Feature/originalFeature';\r\nimport ItemReducer  from './Item/item';\r\nimport originalItemReducer from './Item/originalItem';\r\nimport ClinicalCategoryReducer  from './ClinicalCategory/clinicalCategory';\r\nimport originalClinicalCategoryReducer from './ClinicalCategory/originalClinicalCategory';\r\n//import selectedCellReducer  from './selectedCell';\r\n\r\n//import  authReducer  from './auth';\r\n\r\nexport default combineReducers({\r\n    suite: suiteReducer,\r\n    originalSuite: originalSuiteReducer,\r\n    version: versionReducer,\r\n    originalVersion: originalVersionReducer,\r\n    //code: CodeReducer,\r\n    originalCode: originalCodeReducer,\r\n   // category: CategoryReducer,\r\n    originalCategory: originalCategoryReducer,\r\n    feature: FeatureReducer,\r\n    originalFeature: originalFeatureReducer,\r\n    item: ItemReducer,\r\n    originalItem: originalItemReducer,\r\n    clinicalCategory: ClinicalCategoryReducer,\r\n    originalClinicalCategory: originalClinicalCategoryReducer\r\n    //selectedCell: selectedCellReducer\r\n    \r\n});","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst   errorStringSlice = createSlice({\r\n    name: 'errorString',\r\n    initialState: \"\",\r\n    reducers: {\r\n      setErrorString(errorString, action){\r\n        return action.payload;\r\n      },  \r\n    },\r\n  })\r\n  \r\n  export const { setErrorString } = errorStringSlice.actions\r\n  export default errorStringSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\r\n//import { templateReceived } from './template'\r\n\r\nconst   isLoadingSlice = createSlice({\r\n    name: 'isLoading',\r\n    initialState: false,\r\n    reducers: {\r\n        setIsLoading(loading, action){\r\n            return action.payload;\r\n          }, \r\n    },\r\n    // extraReducers: {\r\n    //     [templateReceived] : (state, action) => {\r\n    //         return action.payload;\r\n    //       }\r\n    // }\r\n  })\r\n  \r\n  export const { setIsLoading } = isLoadingSlice.actions\r\n  export default isLoadingSlice.reducer","import { combineReducers } from 'redux';\r\n import  entitiesReducer  from './entities';\r\n import  errorStringReducer  from './error';\r\n import  isLoadingReducer  from './isLoading';\r\n// import  isDirtyReducer from './isDirty';\r\n\r\nexport default combineReducers({\r\n     entities: entitiesReducer,\r\n     errorString: errorStringReducer,\r\n     isLoading: isLoadingReducer,\r\n    // isDirty: isDirtyReducer\r\n});","import * as actions from '../../Product/service';\r\nimport { ProductService } from '../../../Service/ProductService';\r\n\r\nconst productService = ({ dispatch }) => next => async action => {\r\n    let productSrv = null;\r\n    const { data, onSuccess, onError } = action.payload?? {};\r\n    if(data)\r\n     productSrv = new ProductService(dispatch, onSuccess, onError);\r\n    switch(action.type){\r\n        case( actions.serviceGetSuite.type ):\r\n            next(action);\r\n           // productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.getSuiteWithVersions(data)\r\n        break; \r\n        case( actions.serviceSaveSuite.type ):\r\n            next(action);\r\n            \r\n            //productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.SaveSuiteWithDependents(data)\r\n        break; \r\n        case( actions.serviceGetVersion.type ):\r\n            next(action);\r\n\r\n            //productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.getVersionWithDependents(action.payload)\r\n        break; \r\n        case( actions.serviceSaveVersion.type ):\r\n            next(action);\r\n\r\n            //productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.SaveSuiteWithDependents(action.payload)\r\n        break; \r\n        case( actions.serviceGetCode.type ):\r\n            next(action);\r\n\r\n            //productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.getVersionWithDependents(action.payload)\r\n        break; \r\n        case( actions.serviceSaveCode.type ):\r\n            next(action);\r\n\r\n            //productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.SaveSuiteWithDependents(action.payload)\r\n        break;\r\n        case( actions.serviceGetCategory.type ):\r\n            next(action);\r\n\r\n            //productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.getVersionWithDependents(action.payload)\r\n        break; \r\n        case( actions.serviceSaveCategory.type ):\r\n            next(action);\r\n\r\n            //productSrv = new ProductService(dispatch, onSuccess, onError);\r\n            productSrv.SaveSuiteWithDependents(action.payload)\r\n        break; \r\n        \r\n          default:   \r\n        return next(action);\r\n}\r\n}\r\n\r\nexport default productService;","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { serviceGetCode, serviceSaveCode } from './service';\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nexport const codeReceived = createAction(\"code/Received\");\r\nexport const codeSaved = createAction(\"code/Saved\");\r\n\r\nconst  codeSlice = createSlice({\r\n    name: 'code',\r\n    initialState: productSrv.getNewCode(),\r\n    reducers: {\r\n      updateCode(version, action){\r\n        return action.payload;\r\n      },\r\n      // updateImage(template, action){\r\n      //   template.Base64 = action.payload\r\n      // },  \r\n      // updateName(template, action){\r\n      //   template.Name = action.payload\r\n      // }, \r\n      // updateVersion(suite, action){\r\n      //   suite.Layout.Version = action.payload\r\n      // }, \r\n      // updateLayout(template, action){\r\n      //   template.Layout = action.payload\r\n      // },  \r\n      // addItem(template, action) {\r\n      //   template.Layout.Setting.CellData\r\n      //   .push({ ...action.payload, Id : id++})\r\n      // },\r\n      // updateItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //       .findIndex(c => c.Id === action.payload.Id);\r\n      //   template.Layout.Setting.CellData[index] = action.payload;\r\n      // },\r\n      // updateItems(template, action) {\r\n      //   template.Layout.Setting.CellData = action.payload;\r\n      // },\r\n      // removeItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //   .findIndex(c => c.Id === action.payload);\r\n      //    template.Layout.Setting.CellData.splice(index,1)\r\n      // },\r\n    },\r\n  })\r\n  \r\n  export const {\r\n     updateCode } = codeSlice.actions\r\n  export default codeSlice.reducer\r\n\r\n // Action Creators\r\n\r\n  export const loadCode = (id) => serviceGetCode({\r\n    data: id,\r\n    onSuccess: codeReceived.type\r\n  });\r\n\r\n  export const SaveCode = (code) => serviceSaveCode({\r\n    data: code,\r\n    onSuccess: codeSaved.type\r\n  });\r\n\r\n\r\n\r\n  //createselector from reselect for cachng","import { createAction, createSlice } from '@reduxjs/toolkit'\r\nimport { serviceGetCategory, serviceSaveCategory } from './service';\r\nimport { ProductService } from '../../Service/ProductService';\r\n\r\nconst productSrv = new ProductService();\r\n\r\nexport const categoryReceived = createAction(\"category/Received\");\r\nexport const categorySaved = createAction(\"category/Saved\");\r\n\r\nconst  categorySlice = createSlice({\r\n    name: 'category',\r\n    initialState: productSrv.getNewCategory(),\r\n    reducers: {\r\n      updateCategory(version, action){\r\n        return action.payload;\r\n      },\r\n      // updateImage(template, action){\r\n      //   template.Base64 = action.payload\r\n      // },  \r\n      // updateName(template, action){\r\n      //   template.Name = action.payload\r\n      // }, \r\n      // updateVersion(suite, action){\r\n      //   suite.Layout.Version = action.payload\r\n      // }, \r\n      // updateLayout(template, action){\r\n      //   template.Layout = action.payload\r\n      // },  \r\n      // addItem(template, action) {\r\n      //   template.Layout.Setting.CellData\r\n      //   .push({ ...action.payload, Id : id++})\r\n      // },\r\n      // updateItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //       .findIndex(c => c.Id === action.payload.Id);\r\n      //   template.Layout.Setting.CellData[index] = action.payload;\r\n      // },\r\n      // updateItems(template, action) {\r\n      //   template.Layout.Setting.CellData = action.payload;\r\n      // },\r\n      // removeItem(template, action) {\r\n      //   let index = template.Layout.Setting.CellData\r\n      //   .findIndex(c => c.Id === action.payload);\r\n      //    template.Layout.Setting.CellData.splice(index,1)\r\n      // },\r\n    },\r\n  })\r\n  \r\n  export const {\r\n     updateCategory } = categorySlice.actions\r\n  export default categorySlice.reducer\r\n\r\n // Action Creators\r\n\r\n  export const loadCategory = (id) => serviceGetCategory({\r\n    data: id,\r\n    onSuccess: categoryReceived.type\r\n  });\r\n\r\n  export const SaveCategory = (category) => serviceSaveCategory({\r\n    data: category,\r\n    onSuccess: categorySaved.type\r\n  });\r\n\r\n\r\n\r\n  //createselector from reselect for cachng","import _ from 'lodash'; \r\nimport * as suiteActions from '../../Product/suite';\r\nimport * as versionActions from '../../Product/version';\r\nimport * as codeActions from '../../Product/code';\r\nimport * as categoryActions from '../../Product/category';\r\nimport * as error from '../../error';\r\nimport { updateOriginalSuite } from '../../Product/originalSuite';\r\nimport { updateOriginalVersion } from '../../Product/originalVersion';\r\nimport { updateOriginalCode } from '../../Product/originalCode';\r\nimport { updateOriginalCategory } from '../../Product/originalCategory';\r\n\r\nconst product = (store) => next => async action => {\r\n    switch(action.type){\r\n        //  case( versionActions.updateVersion.type):\r\n        //      next(action);\r\n        //      let state = store.getState();\r\n        //      let suite = _.cloneDeep(state.entities.suite);\r\n        //      if (action.payload.Id && \r\n        //         action.payload.Mode && !(action.payload.Mode === \"new\" && action.payload.Mode === \"clone\")) {\r\n        //         let index = suite.Versions.findIndex(x => x.Id === action.payload.Id);\r\n        //         if (index > -1) {\r\n        //             suite.Versions[index] = action.payload\r\n        //         }else{\r\n        //             suite.Versions.push(action.payload)\r\n        //         }\r\n        //         if (!_.isEqual(state.entities.suite, suite))\r\n        //             store.dispatch(suiteActions.updateSuite(suite));\r\n        //       }\r\n        //  break;\r\n        case( suiteActions.suiteReceived.type ):\r\n        case( suiteActions.suiteSaved.type ):\r\n            next(action);\r\n\r\n            store.dispatch(updateOriginalSuite(action.payload));\r\n            store.dispatch(suiteActions.updateSuite(action.payload));\r\n        break; \r\n        case( versionActions.versionReceived.type ):\r\n        case( versionActions.versionSaved.type ):\r\n            next(action);\r\n\r\n            store.dispatch(updateOriginalVersion(action.payload));\r\n            store.dispatch(versionActions.updateVersion(action.payload));\r\n        break; \r\n        case( codeActions.codeReceived.type ):\r\n        case( codeActions.codeSaved.type ):\r\n            next(action);\r\n\r\n            store.dispatch(updateOriginalCode(action.payload));\r\n            store.dispatch(codeActions.updateCode(action.payload));\r\n        break; \r\n        case( categoryActions.categoryReceived.type ):\r\n        case( categoryActions.categorySaved.type ):\r\n            next(action);\r\n\r\n            store.dispatch(updateOriginalCategory(action.payload));\r\n            store.dispatch(categoryActions.updateCategory(action.payload));\r\n        break; \r\n        case( suiteActions.suiteError.type ):\r\n            next(action);\r\n\r\n            store.dispatch(error.setErrorString(action.payload));\r\n        break; \r\n        \r\n          default:   \r\n        return next(action);\r\n}\r\n}\r\n\r\nexport default product;","import * as actions from '../../Feature/service';\r\nimport { FeatureService } from '../../../Service/FeatureService';\r\n\r\nconst featureService = ({ dispatch }) => next => async action => {\r\n    let srv = null;\r\n    const { data, onSuccess, onError } = action.payload;\r\n    switch(action.type){\r\n        case( actions.serviceGetFeature.type ):\r\n            next(action);\r\n            srv = new FeatureService(dispatch, onSuccess, onError);\r\n            srv.getFeatureWithDependents(data)\r\n        break; \r\n        case( actions.serviceSaveFeature.type ):\r\n            next(action);\r\n            \r\n            srv = new FeatureService(dispatch, onSuccess, onError);\r\n            srv.SaveFeatureWithItems(data)\r\n        break; \r\n          default:   \r\n        return next(action);\r\n}\r\n}\r\n\r\nexport default featureService;","import * as actions from '../../Feature/feature';\r\nimport { updateOriginalFeature } from '../../Feature/originalFeature';\r\n\r\nconst feature = ({ dispatch }) => next => async action => {\r\n    switch(action.type){\r\n        case( actions.featureReceived.type ):\r\n        case( actions.featureSaved.type ):\r\n            next(action);\r\n\r\n            dispatch(updateOriginalFeature(action.payload));\r\n            dispatch(actions.updateFeature(action.payload));\r\n        break; \r\n        \r\n          default:   \r\n        return next(action);\r\n    }\r\n}\r\n\r\nexport default feature;","import * as actions from '../../Item/service';\r\nimport { ItemService } from '../../../Service/ItemService';\r\n\r\nconst itemService = ({ dispatch }) => next => async action => {\r\n    let itemSrv = null;\r\n    const { data, onSuccess, onError } = action.payload;\r\n    switch(action.type){\r\n        case( actions.serviceGetItem.type ):\r\n            next(action);\r\n            itemSrv = new ItemService(dispatch, onSuccess, onError);\r\n            itemSrv.getItem(data)\r\n        break; \r\n        case( actions.serviceSaveItem.type ):\r\n            next(action);\r\n            \r\n            itemSrv = new ItemService(dispatch, onSuccess, onError);\r\n            itemSrv.SaveItem(data)\r\n        break; \r\n          default:   \r\n        return next(action);\r\n}\r\n}\r\n\r\nexport default itemService;","import * as actions from '../../Item/item';\r\nimport { updateOriginalItem } from '../../Item/originalItem';\r\n\r\nconst item = ({ dispatch }) => next => async action => {\r\n    switch(action.type){\r\n        case( actions.itemReceived.type ):\r\n        case( actions.itemSaved.type ):\r\n            next(action);\r\n\r\n            dispatch(actions.updateItem(action.payload));\r\n            dispatch(updateOriginalItem(action.payload));\r\n        break; \r\n        \r\n          default:   \r\n        return next(action);\r\n    }\r\n}\r\n\r\nexport default item;","import * as actions from '../../ClinicalCategory/service';\r\nimport { ClinicalCategoryService } from '../../../Service/ClinicalCategory';\r\n\r\nconst clinicalCategoryService = ({ dispatch }) => next => async action => {\r\n    let srv = null;\r\n    const { data, onSuccess, onError } = action.payload;\r\n    switch(action.type){\r\n        case( actions.serviceGetClinicalCategory.type ):\r\n            next(action);\r\n            srv = new ClinicalCategoryService(dispatch, onSuccess, onError);\r\n            srv.getClinicalCategotyWithDependents(data)\r\n        break; \r\n        case( actions.serviceSaveClinicalCategory.type ):\r\n            next(action);\r\n            \r\n            srv = new ClinicalCategoryService(dispatch, onSuccess, onError);\r\n            srv.SaveClinicalCategoryWithDependents(data)\r\n        break; \r\n          default:   \r\n        return next(action);\r\n}\r\n}\r\n\r\nexport default clinicalCategoryService;","import * as actions from '../../ClinicalCategory/clinicalCategory';\r\nimport { updateOriginalClinicalCategory } from '../../ClinicalCategory/originalClinicalCategory';\r\n\r\nconst clinicalCategory = ({ dispatch }) => next => async action => {\r\n    switch(action.type){\r\n        case( actions.clinicalCategoryReceived.type ):\r\n        case( actions.clinicalCategorySaved.type ):\r\n            next(action);\r\n\r\n            dispatch(updateOriginalClinicalCategory(action.payload));\r\n            dispatch(actions.updateClinicalCategory(action.payload));\r\n        break; \r\n        \r\n          default:   \r\n        return next(action);\r\n    }\r\n}\r\n\r\nexport default clinicalCategory;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./Store/configureStore\";\nlet store = configureStore();\n\nstore.subscribe(() => {\n  console.log(\"store changed\");\n})\n\nReactDOM.render(\n  <React.StrictMode>\n       <Provider store={store}>\n    <App />\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport  reducer  from './reducer'\r\n//import logger from './middleware/logger';\r\nimport productService from './MiddleWare/Product/productService';\r\nimport product from './MiddleWare/Product/product';\r\nimport featureService from './MiddleWare/Feature/featureService';\r\nimport feature from './MiddleWare/Feature/feature';\r\nimport itemService from './MiddleWare/Item/itemService';\r\nimport item from './MiddleWare/Item/item';\r\nimport cinicalCategoryService from './MiddleWare/ClinicalCategory/clinicalCategoryService';\r\nimport cinicalCategory from './MiddleWare/ClinicalCategory/clinicalCategory';\r\n//import suite from './middleware/suite';\r\n//import errorString from './middleware/error';\r\n//import isDirty from './middleware/isDirty';\r\n\r\nexport default function() {\r\n    return configureStore({\r\n        reducer,\r\n        middleware: [\r\n            ...getDefaultMiddleware(),\r\n            productService,\r\n             product,\r\n             featureService,\r\n             feature,\r\n             itemService,\r\n             item,\r\n             cinicalCategoryService,\r\n             cinicalCategory\r\n            // errorString,\r\n            // isDirty\r\n            ]\r\n    });\r\n}"],"sourceRoot":""}